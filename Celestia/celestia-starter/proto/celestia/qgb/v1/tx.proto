syntax = "proto3";
package celestia.qgb.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/api/annotations.proto";

option go_package = "github.com/celestiaorg/celestia-app/x/blobstream/types";

// Msg is the message server for receiving Blobstream transactions
service Msg {
  // RegisterEVMAddress records an evm address for the validator which is used
  // by the relayer to aggregate signatures. A validator can only register a
  // single EVM address. The EVM address can be overridden by a later message.
  // There are no validity checks of the EVM addresses existence on the Ethereum
  // state machine.
  rpc RegisterEVMAddress(MsgRegisterEVMAddress)
      returns (MsgRegisterEVMAddressResponse) {
    option (google.api.http).get = "/qgb/v1/register_evm_address";
  }
}

// MsgRegisterEVMAddress registers an evm address to a validator.
message MsgRegisterEVMAddress {
  // The operating address of the validator.
  string validator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // The matching HEX encoded EVM address.
  string evm_address = 2;
}

// MsgRegisterEVMAddressResponse is the response to registering an EVM address.
message MsgRegisterEVMAddressResponse {}
