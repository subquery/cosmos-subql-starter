# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

enum Direction {
  IN
  OUT
}

enum Message {
  MsgSwapExactAmountIn
  MsgSwapExactAmountOut
  MsgJoinSwapShareAmountOut
}

type Swap @entity {
  id: ID!
  sender: String!
  direction: Direction!
  txHash: String!
  blockHeight: BigInt!
  date: Date!
  message: Message!
  tokenInDenom: String
  tokenInAmount: BigInt
  tokenOutMin: BigInt
  tokenOutDenom: String
  tokenOutAmount: BigInt
  tokenInMax: BigInt
  swapRoutes: [SwapRoute] @derivedFrom(field: "swap") #This is virtual field
}

type SwapRoute @entity {
  id: ID!
  pool: Pool!
  swap: Swap!
  tokenInDenom: String
  tokenOutDenom: String
  poolLiquidity: Float
}

type Pool @entity {
  id: ID!
  createdBlockHeight: BigInt!
  created: Date!
  swapRoutes: [SwapRoute] @derivedFrom(field: "pool") #This is virtual field
}
