{"version":3,"file":"isValidNumberForRegion.js","names":["isValidNumberForRegion","number","country","metadata","TypeError","input","isViablePhoneNumber","parseNumber","defaultCountry","_isValidNumberForRegion","undefined"],"sources":["../source/isValidNumberForRegion.js"],"sourcesContent":["import isViablePhoneNumber from './helpers/isViablePhoneNumber.js'\r\nimport parseNumber from './parse_.js'\r\nimport _isValidNumberForRegion from './isValidNumberForRegion_.js'\r\n\r\nexport default function isValidNumberForRegion(number, country, metadata) {\r\n\tif (typeof number !== 'string') {\r\n\t\tthrow new TypeError('number must be a string')\r\n\t}\r\n\tif (typeof country !== 'string') {\r\n\t\tthrow new TypeError('country must be a string')\r\n\t}\r\n\t// `parse` extracts phone numbers from raw text,\r\n\t// therefore it will cut off all \"garbage\" characters,\r\n\t// while this `validate` function needs to verify\r\n\t// that the phone number contains no \"garbage\"\r\n\t// therefore the explicit `isViablePhoneNumber` check.\r\n\tlet input\r\n\tif (isViablePhoneNumber(number)) {\r\n\t\tinput = parseNumber(number, { defaultCountry: country }, metadata)\r\n\t} else {\r\n\t\tinput = {}\r\n\t}\r\n\treturn _isValidNumberForRegion(input, country, undefined, metadata)\r\n}"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEe,SAASA,sBAAT,CAAgCC,MAAhC,EAAwCC,OAAxC,EAAiDC,QAAjD,EAA2D;EACzE,IAAI,OAAOF,MAAP,KAAkB,QAAtB,EAAgC;IAC/B,MAAM,IAAIG,SAAJ,CAAc,yBAAd,CAAN;EACA;;EACD,IAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;IAChC,MAAM,IAAIE,SAAJ,CAAc,0BAAd,CAAN;EACA,CANwE,CAOzE;EACA;EACA;EACA;EACA;;;EACA,IAAIC,KAAJ;;EACA,IAAI,IAAAC,+BAAA,EAAoBL,MAApB,CAAJ,EAAiC;IAChCI,KAAK,GAAG,IAAAE,kBAAA,EAAYN,MAAZ,EAAoB;MAAEO,cAAc,EAAEN;IAAlB,CAApB,EAAiDC,QAAjD,CAAR;EACA,CAFD,MAEO;IACNE,KAAK,GAAG,EAAR;EACA;;EACD,OAAO,IAAAI,mCAAA,EAAwBJ,KAAxB,EAA+BH,OAA/B,EAAwCQ,SAAxC,EAAmDP,QAAnD,CAAP;AACA"}