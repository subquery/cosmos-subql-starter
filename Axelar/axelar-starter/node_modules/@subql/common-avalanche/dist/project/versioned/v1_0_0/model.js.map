{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../src/project/versioned/v1_0_0/model.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  NodeSpec,\n  ProjectManifestBaseImpl,\n  QuerySpec,\n  RunnerQueryBaseModel,\n  RunnerSpecs,\n  SemverVersionValidator,\n} from '@subql/common';\nimport {plainToClass, Transform, TransformFnParams, Type} from 'class-transformer';\nimport {\n  Equals,\n  IsArray,\n  IsNotEmpty,\n  IsObject,\n  IsOptional,\n  IsString,\n  Validate,\n  ValidateNested,\n  validateSync,\n} from 'class-validator';\nimport {SubqlAvalancheDataSource} from '../../types';\nimport {CustomDatasourceTemplate, RuntimeDatasourceTemplate} from '../v0_2_1';\nimport {\n  FileType,\n  AvalancheCustomDataSourceV0_3_0Impl,\n  AvalancheRuntimeDataSourceV0_3_0Impl,\n  RuntimeDataSourceV0_3_0,\n  CustomDatasourceV0_3_0,\n} from '../v0_3_0';\nimport {AvalancheProjectManifestV1_0_0} from './types';\n\nconst AVALANCHE_NODE_NAME = `@subql/node-avalanche`;\n\nexport class RuntimeDatasourceTemplateImpl\n  extends AvalancheRuntimeDataSourceV0_3_0Impl\n  implements RuntimeDatasourceTemplate\n{\n  @IsString()\n  name: string;\n}\n\nexport class CustomDatasourceTemplateImpl\n  extends AvalancheCustomDataSourceV0_3_0Impl\n  implements CustomDatasourceTemplate\n{\n  @IsString()\n  name: string;\n}\n\nexport class AvalancheRunnerNodeImpl implements NodeSpec {\n  @Equals(AVALANCHE_NODE_NAME, {message: `Runner Substrate node name incorrect, suppose be '${AVALANCHE_NODE_NAME}'`})\n  name: string;\n  @IsString()\n  @Validate(SemverVersionValidator)\n  // @Matches(RUNNER_REGEX,{message: 'runner version is not correct'})\n  version: string;\n}\n\nexport class AvalancheRunnerSpecsImpl implements RunnerSpecs {\n  @IsObject()\n  @ValidateNested()\n  @Type(() => AvalancheRunnerNodeImpl)\n  node: NodeSpec;\n  @IsObject()\n  @ValidateNested()\n  @Type(() => RunnerQueryBaseModel)\n  query: QuerySpec;\n}\n\nexport class ProjectNetworkDeploymentV1_0_0 {\n  @IsNotEmpty()\n  @Transform(({value}: TransformFnParams) => value.trim())\n  @IsString()\n  chainId: string;\n  @ValidateNested()\n  @Type(() => FileType)\n  @IsOptional()\n  chaintypes?: FileType;\n  @IsString()\n  subnet: string;\n  @IsOptional()\n  @IsArray()\n  bypassBlocks?: (number | string)[];\n}\n\nexport class ProjectNetworkV1_0_0 extends ProjectNetworkDeploymentV1_0_0 {\n  @IsString()\n  @IsOptional()\n  endpoint?: string;\n  @IsString()\n  @IsOptional()\n  dictionary?: string;\n}\n\nexport class DeploymentV1_0_0 {\n  @Transform((params) => {\n    if (params.value.genesisHash && !params.value.chainId) {\n      params.value.chainId = params.value.genesisHash;\n    }\n    return plainToClass(ProjectNetworkDeploymentV1_0_0, params.value);\n  })\n  @ValidateNested()\n  @Type(() => ProjectNetworkDeploymentV1_0_0)\n  network: ProjectNetworkDeploymentV1_0_0;\n  @Equals('1.0.0')\n  @IsString()\n  specVersion: string;\n  @IsObject()\n  @ValidateNested()\n  @Type(() => AvalancheRunnerSpecsImpl)\n  runner: RunnerSpecs;\n  @ValidateNested()\n  @Type(() => FileType)\n  schema: FileType;\n  @IsArray()\n  @ValidateNested()\n  @Type(() => AvalancheCustomDataSourceV0_3_0Impl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: AvalancheRuntimeDataSourceV0_3_0Impl, name: 'avalanche/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  dataSources: (RuntimeDataSourceV0_3_0 | CustomDatasourceV0_3_0)[];\n  @IsOptional()\n  @IsArray()\n  @ValidateNested()\n  @Type(() => CustomDatasourceTemplateImpl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: AvalancheRuntimeDataSourceV0_3_0Impl, name: 'avalanche/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  templates?: (RuntimeDatasourceTemplate | CustomDatasourceTemplate)[];\n}\n\nexport class ProjectManifestV1_0_0Impl<D extends object = DeploymentV1_0_0>\n  extends ProjectManifestBaseImpl<D>\n  implements AvalancheProjectManifestV1_0_0\n{\n  @Equals('1.0.0')\n  specVersion: string;\n  @Type(() => AvalancheCustomDataSourceV0_3_0Impl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: AvalancheRuntimeDataSourceV0_3_0Impl, name: 'avalanche/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  dataSources: SubqlAvalancheDataSource[];\n  @Type(() => ProjectNetworkV1_0_0)\n  network: ProjectNetworkV1_0_0;\n  @IsString()\n  name: string;\n  @IsString()\n  version: string;\n  @ValidateNested()\n  @Type(() => FileType)\n  schema: FileType;\n  @IsOptional()\n  @IsArray()\n  @ValidateNested()\n  @Type(() => CustomDatasourceTemplateImpl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: RuntimeDatasourceTemplateImpl, name: 'avalanche/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  templates?: (RuntimeDatasourceTemplate | CustomDatasourceTemplate)[];\n  @IsObject()\n  @ValidateNested()\n  @Type(() => AvalancheRunnerSpecsImpl)\n  runner: RunnerSpecs;\n  protected _deployment: D;\n\n  get deployment(): D {\n    if (!this._deployment) {\n      this._deployment = plainToClass(DeploymentV1_0_0, this) as unknown as D;\n      validateSync(this._deployment, {whitelist: true});\n    }\n\n    return this._deployment;\n  }\n}\n"]}