{"version":3,"file":"project.spec.js","sourceRoot":"","sources":["../../src/project/project.spec.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport path from 'path';\nimport {RunnerQueryBaseModel} from '@subql/common';\nimport {validateSync} from 'class-validator';\nimport {DeploymentV1_0_0, AvalancheRunnerNodeImpl, AvalancheRunnerSpecsImpl} from '../project/versioned/v1_0_0';\nimport {loadAvalancheProjectManifest} from './load';\n\nconst projectsDir = path.join(__dirname, '../../test');\n\ndescribe.skip('project.yaml', () => {\n  it('can validate project.yaml', () => {\n    expect(() => loadAvalancheProjectManifest(path.join(projectsDir, 'project_falsy.yaml'))).toThrow();\n    expect(() => loadAvalancheProjectManifest(path.join(projectsDir, 'project_falsy_array.yaml'))).toThrow();\n  });\n\n  it('can fail validation if version not supported', () => {\n    expect(() => loadAvalancheProjectManifest(path.join(projectsDir, 'project_invalid_version.yaml'))).toThrow();\n  });\n\n  it('can validate a v0.2.0 project.yaml with a custom data source', () => {\n    expect(() => loadAvalancheProjectManifest(path.join(projectsDir, 'project_0.2.0_custom_ds.yaml'))).not.toThrow();\n  });\n\n  it('can validate a v0.2.1 project.yaml with templates', () => {\n    expect(() => loadAvalancheProjectManifest(path.join(projectsDir, 'project_0.2.1.yaml'))).not.toThrow();\n  });\n\n  it('can validate a v1.0.0 project.yaml with templates', () => {\n    expect(() => loadAvalancheProjectManifest(path.join(projectsDir, 'project_1.0.0.yaml'))).not.toThrow();\n  });\n\n  it('get v1.0.0 deployment mapping filter', () => {\n    const manifestVersioned = loadAvalancheProjectManifest(path.join(projectsDir, 'project_1.0.0.yaml'));\n\n    const deployment = manifestVersioned.asV1_0_0.deployment;\n    const filter = deployment.dataSources[0].mapping.handlers[0].filter;\n    const deploymentString = manifestVersioned.toDeployment();\n    expect(filter).not.toBeNull();\n    expect(deploymentString).toContain('function: approve(address spender, uint256 rawAmount)');\n  });\n\n  it('can convert genesis hash in v1.0.0 to chainId in deployment', () => {\n    const deployment = loadAvalancheProjectManifest(path.join(projectsDir, 'project_1.0.0.yaml')).asV1_0_0.deployment;\n    expect(deployment.network.chainId).not.toBeNull();\n    console.log(deployment.network.chainId);\n  });\n\n  it.skip('can get chainId for deployment', () => {\n    const deployment = loadAvalancheProjectManifest(path.join(projectsDir, 'project_1.0.0_chainId.yaml')).asV1_0_0\n      .deployment;\n    expect(deployment.network.chainId).toBe('moonbeamChainId');\n  });\n\n  it('can validate deployment runner versions', () => {\n    const deployment = new DeploymentV1_0_0();\n    const nodeImp = new AvalancheRunnerNodeImpl();\n    const queryImp = new RunnerQueryBaseModel();\n    deployment.specVersion = '1.0.0';\n    deployment.runner = new AvalancheRunnerSpecsImpl();\n\n    nodeImp.name = '@subql/node';\n    nodeImp.version = '0.29.1';\n    deployment.runner.node = nodeImp;\n\n    queryImp.name = '@subql/query';\n    queryImp.version = '0.213.1';\n\n    deployment.runner.query = queryImp;\n\n    validateSync(deployment.runner, {whitelist: true, forbidNonWhitelisted: true});\n  });\n\n  it('can validate a v1.0.0 project.yaml with unsupported runner node', () => {\n    expect(() => loadAvalancheProjectManifest(path.join(projectsDir, 'project_1.0.0_bad_runner.yaml'))).toThrow();\n  });\n\n  //TODO, pre-release should be excluded\n  it.skip('can throw error with unsupported runner version', () => {\n    expect(() =>\n      loadAvalancheProjectManifest(path.join(projectsDir, 'project_1.0.0_bad_runner_version.yaml'))\n    ).toThrow();\n  });\n\n  it('can validate a v1.0.0 project.yaml runner and datasource mismatches', () => {\n    expect(() =>\n      loadAvalancheProjectManifest(path.join(projectsDir, 'project_1.0.0_runner_ds_mismatch.yaml'))\n    ).toThrow();\n  });\n\n  it('can fail validation if custom ds missing processor', () => {\n    expect(() =>\n      loadAvalancheProjectManifest(path.join(projectsDir, 'project_0.2.0_invalid_custom_ds.yaml'))\n    ).toThrow();\n  });\n});\n"]}