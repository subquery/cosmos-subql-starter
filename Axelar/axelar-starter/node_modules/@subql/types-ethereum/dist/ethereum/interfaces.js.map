{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../src/ethereum/interfaces.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {BlockWrapper} from '../interfaces';\n\nexport interface EthereumBlockFilter {\n  modulo?: number;\n  timestamp?: string;\n}\n\nexport interface EthereumTransactionFilter {\n  from?: string;\n  to?: string;\n  function?: string;\n}\n\nexport interface EthereumLogFilter {\n  topics?: Array<string | null | undefined>;\n  address?: string;\n}\n\nexport interface EthereumResult extends ReadonlyArray<any> {\n  readonly [key: string]: any;\n}\n\nexport type FlareResult = EthereumResult;\n\nexport type EthereumBlock = {\n  blockExtraData: string;\n  difficulty: bigint;\n  extDataGasUsed: string;\n  extDataHash: string;\n  gasLimit: bigint;\n  gasUsed: bigint;\n  hash: string;\n  logs: EthereumLog[];\n  logsBloom: string;\n  miner: string;\n  mixHash: string;\n  nonce: string;\n  number: number;\n  parentHash: string;\n  receiptsRoot: string;\n  sha3Uncles: string;\n  size: bigint;\n  stateRoot: string;\n  timestamp: bigint;\n  totalDifficulty: bigint;\n  transactions: EthereumTransaction[];\n  transactionsRoot: string;\n  uncles: string[];\n  baseFeePerGas?: bigint;\n  blockGasCost?: bigint;\n};\n\nexport type FlareBlock = EthereumBlock;\n\nexport type EthereumTransaction<T extends EthereumResult = EthereumResult> = {\n  blockHash: string;\n  blockNumber: number;\n  from: string;\n  gas: bigint;\n  gasPrice: bigint;\n  hash: string;\n  input: string;\n  nonce: bigint;\n  to: string;\n  transactionIndex: bigint;\n  value: bigint;\n  type: string;\n  v: bigint;\n  r: string;\n  s: string;\n  receipt: EthereumReceipt;\n  accessList?: string[];\n  chainId?: string;\n  maxFeePerGas?: bigint;\n  maxPriorityFeePerGas?: bigint;\n  args?: T;\n};\n\nexport type FlareTransaction<T extends FlareResult = FlareResult> = EthereumTransaction<T>;\n\nexport type EthereumReceipt = {\n  blockHash: string;\n  blockNumber: number;\n  contractAddress: string;\n  cumulativeGasUsed: bigint;\n  effectiveGasPrice: bigint;\n  from: string;\n  gasUsed: bigint;\n  logs: EthereumLog[];\n  logsBloom: string;\n  status: boolean;\n  to: string;\n  transactionHash: string;\n  transactionIndex: number;\n  type: string;\n};\n\nexport type FlareReceipt = EthereumReceipt;\n\nexport type EthereumLog<T extends EthereumResult = EthereumResult> = {\n  address: string;\n  topics: string[];\n  data: string;\n  blockHash: string;\n  blockNumber: number;\n  transactionHash: string;\n  transactionIndex: number;\n  logIndex: number;\n  removed: boolean;\n  args?: T;\n  block: EthereumBlock;\n};\n\nexport type FlareLog<T extends FlareResult = FlareResult> = EthereumLog<T>;\n\nexport type EthereumBlockWrapper = BlockWrapper<\n  EthereumBlock,\n  EthereumTransaction,\n  EthereumLog,\n  EthereumTransactionFilter,\n  EthereumLogFilter\n>;\n"]}