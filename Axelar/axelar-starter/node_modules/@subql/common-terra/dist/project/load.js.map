{"version":3,"file":"load.js","sourceRoot":"","sources":["../../src/project/load.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,0CAAkE;AAClE,2CAAoF;AAEpF,SAAgB,wBAAwB,CAAC,IAAY;IACnD,MAAM,GAAG,GAAG,IAAA,2BAAkB,EAAC,IAAA,wBAAe,EAAC,IAAI,CAAC,CAAC,CAAC;IACtD,MAAM,eAAe,GAAG,IAAI,yCAA6B,CAAC,GAA+B,CAAC,CAAC;IAC3F,eAAe,CAAC,QAAQ,EAAE,CAAC;IAC3B,OAAO,eAAe,CAAC;AACzB,CAAC;AALD,4DAKC;AAED,SAAgB,yBAAyB,CAAC,GAAY;IACpD,MAAM,eAAe,GAAG,IAAI,yCAA6B,CAAC,GAA+B,CAAC,CAAC;IAC3F,eAAe,CAAC,QAAQ,EAAE,CAAC;IAC3B,OAAO,eAAe,CAAC;AACzB,CAAC;AAJD,8DAIC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {getManifestPath, loadFromJsonOrYaml} from '@subql/common';\nimport {TerraProjectManifestVersioned, VersionedProjectManifest} from './versioned';\n\nexport function loadTerraProjectManifest(file: string): TerraProjectManifestVersioned {\n  const doc = loadFromJsonOrYaml(getManifestPath(file));\n  const projectManifest = new TerraProjectManifestVersioned(doc as VersionedProjectManifest);\n  projectManifest.validate();\n  return projectManifest;\n}\n\nexport function parseTerraProjectManifest(raw: unknown): TerraProjectManifestVersioned {\n  const projectManifest = new TerraProjectManifestVersioned(raw as VersionedProjectManifest);\n  projectManifest.validate();\n  return projectManifest;\n}\n"]}