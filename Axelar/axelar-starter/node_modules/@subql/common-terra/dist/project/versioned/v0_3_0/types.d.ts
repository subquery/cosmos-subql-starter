import { SubqlTerraCustomDatasource, SubqlTerraCustomHandler, SubqlTerraDatasource, SubqlTerraHandler, SubqlTerraMapping, SubqlTerraRuntimeDatasource, SubqlTerraRuntimeHandler } from '@subql/types-terra';
import { ITerraProjectManifest } from '../../types';
export interface SubqlMappingV0_3_0<T extends SubqlTerraHandler> extends SubqlTerraMapping<T> {
    file: string;
}
export declare type RuntimeDataSourceV0_3_0 = SubqlTerraRuntimeDatasource<SubqlMappingV0_3_0<SubqlTerraRuntimeHandler>>;
export declare type CustomDatasourceV0_3_0 = SubqlTerraCustomDatasource<string, SubqlMappingV0_3_0<SubqlTerraCustomHandler>>;
export interface TerraProjectManifestV0_3_0 extends ITerraProjectManifest {
    name: string;
    version: string;
    schema: {
        file: string;
    };
    network: {
        endpoint?: string;
        dictionary?: string;
        chainId: string;
        mantlemint?: string;
    };
    dataSources: (RuntimeDataSourceV0_3_0 | CustomDatasourceV0_3_0)[];
}
export declare function isRuntimeDataSourceV0_3_0(dataSource: SubqlTerraDatasource): dataSource is RuntimeDataSourceV0_3_0;
