{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../src/project/versioned/v0_2_0/model.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {BaseMapping, ProjectManifestBaseImpl} from '@subql/common';\nimport {SubstrateCustomDatasource, SubstrateNetworkFilter} from '@subql/types';\nimport {plainToClass, Transform, TransformFnParams, Type} from 'class-transformer';\nimport {\n  Equals,\n  IsArray,\n  IsNotEmpty,\n  IsObject,\n  IsOptional,\n  IsString,\n  ValidateNested,\n  validateSync,\n} from 'class-validator';\nimport {CustomDataSourceBase, RuntimeDataSourceBase} from '../../models';\nimport {CustomDatasourceV0_2_0, SubstrateProjectManifestV0_2_0, RuntimeDataSourceV0_2_0} from './types';\n\nexport class FileType {\n  @IsString()\n  file: string;\n}\n\nexport class ProjectNetworkDeploymentV0_2_0 {\n  @IsString()\n  @IsNotEmpty()\n  @Transform(({value}: TransformFnParams) => value.trim())\n  genesisHash: string;\n  @ValidateNested()\n  @Type(() => FileType)\n  @IsOptional()\n  chaintypes?: FileType;\n}\n\nexport class ProjectNetworkV0_2_0 extends ProjectNetworkDeploymentV0_2_0 {\n  @IsString()\n  @IsOptional()\n  endpoint?: string;\n  @IsString()\n  @IsOptional()\n  dictionary?: string;\n}\n\nfunction validateObject(object: any, errorMessage = 'failed to validate object.'): void {\n  const errors = validateSync(object, {whitelist: true, forbidNonWhitelisted: true});\n  if (errors?.length) {\n    // TODO: print error details\n    const errorMsgs = errors.map((e) => e.toString()).join('\\n');\n    throw new Error(`${errorMessage}\\n${errorMsgs}`);\n  }\n}\n\nexport class SubstrateRuntimeDataSourceV0_2_0Impl extends RuntimeDataSourceBase implements RuntimeDataSourceV0_2_0 {\n  validate(): void {\n    return validateObject(this, 'failed to validate runtime datasource.');\n  }\n}\n\nexport class SubstrateCustomDataSourceV0_2_0Impl<\n    K extends string = string,\n    T extends SubstrateNetworkFilter = SubstrateNetworkFilter,\n    M extends BaseMapping<any, any> = BaseMapping<Record<string, unknown>, any>\n  >\n  extends CustomDataSourceBase<K, T, M>\n  implements SubstrateCustomDatasource<K, T, M>\n{\n  validate(): void {\n    return validateObject(this, 'failed to validate custom datasource.');\n  }\n}\n\nexport class DeploymentV0_2_0 {\n  @Equals('0.2.0')\n  @IsString()\n  specVersion: string;\n  @ValidateNested()\n  @Type(() => FileType)\n  schema: FileType;\n  @IsArray()\n  @ValidateNested()\n  @Type(() => SubstrateCustomDataSourceV0_2_0Impl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: SubstrateRuntimeDataSourceV0_2_0Impl, name: 'substrate/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  dataSources: (RuntimeDataSourceV0_2_0 | CustomDatasourceV0_2_0)[];\n  @ValidateNested()\n  @Type(() => ProjectNetworkDeploymentV0_2_0)\n  network: ProjectNetworkDeploymentV0_2_0;\n}\n\nexport class ProjectManifestV0_2_0Impl<D extends object = DeploymentV0_2_0>\n  extends ProjectManifestBaseImpl<D>\n  implements SubstrateProjectManifestV0_2_0\n{\n  @Equals('0.2.0')\n  specVersion: string;\n  @IsString()\n  name: string;\n  @IsString()\n  version: string;\n  @IsObject()\n  @ValidateNested()\n  @Type(() => ProjectNetworkV0_2_0)\n  network: ProjectNetworkV0_2_0;\n  @ValidateNested()\n  @Type(() => FileType)\n  schema: FileType;\n  @IsArray()\n  @ValidateNested()\n  @Type(() => SubstrateCustomDataSourceV0_2_0Impl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: SubstrateRuntimeDataSourceV0_2_0Impl, name: 'substrate/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  dataSources: (RuntimeDataSourceV0_2_0 | CustomDatasourceV0_2_0)[];\n  protected _deployment: D;\n\n  get deployment(): D {\n    if (!this._deployment) {\n      this._deployment = plainToClass(DeploymentV0_2_0, this) as unknown as D;\n      validateSync(this._deployment, {whitelist: true});\n    }\n    return this._deployment;\n  }\n}\n"]}