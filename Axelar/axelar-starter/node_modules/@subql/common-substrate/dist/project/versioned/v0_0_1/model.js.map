{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../src/project/versioned/v0_0_1/model.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;;;;;;;;;;AAEtC,0CAAsD;AACtD,wCAKsB;AACtB,yDAAgE;AAChE,qDAUyB;AACzB,yCAAyG;AAIzG,MAAa,oBAAqB,SAAQ,mBAAU;CAMnD;AALC;IAAC,IAAA,0BAAQ,GAAE;;sDACM;AACjB;IAAC,IAAA,0BAAQ,GAAE;IACV,IAAA,4BAAU,GAAE;;wDACO;AALtB,oDAMC;AAED,MAAa,oBAAoB;CAmBhC;AAlBC;IAAC,IAAA,6BAAS,EAAC,CAAC,MAAM,EAAE,EAAE;QACpB,MAAM,QAAQ,GAA8B,MAAM,CAAC,KAAK,CAAC;QACzD,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;YAC9B,QAAQ,OAAO,CAAC,IAAI,EAAE;gBACpB,KAAK,4BAAoB,CAAC,KAAK;oBAC7B,OAAO,IAAA,gCAAY,EAAC,qBAAY,EAAE,OAAO,CAAC,CAAC;gBAC7C,KAAK,4BAAoB,CAAC,IAAI;oBAC5B,OAAO,IAAA,gCAAY,EAAC,oBAAW,EAAE,OAAO,CAAC,CAAC;gBAC5C,KAAK,4BAAoB,CAAC,KAAK;oBAC7B,OAAO,IAAA,gCAAY,EAAC,qBAAY,EAAE,OAAO,CAAC,CAAC;gBAC7C;oBACE,MAAM,IAAI,KAAK,CAAC,WAAY,OAAe,CAAC,IAAI,gBAAgB,CAAC,CAAC;aACrE;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IACD,IAAA,yBAAO,GAAE;IACT,IAAA,gCAAc,GAAE;;sDACmB;AAlBtC,oDAmBC;AAED,MAAa,2BAA2B;CAevC;AAdC;IAAC,IAAA,0BAAQ,GAAE;;yDACE;AACb;IAAC,IAAA,wBAAM,EAAC,+BAAuB,EAAE,EAAC,MAAM,EAAE,CAAC,+BAAuB,CAAC,OAAO,CAAC,EAAC,CAAC;;yDACvC;AACtC;IAAC,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,oBAAoB,CAAC;IAChC,IAAA,gCAAc,GAAE;8BACR,oBAAoB;4DAAC;AAC9B;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,uBAAK,GAAE;;+DACY;AACpB;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,gCAAc,GAAE;IAChB,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,+BAAsB,CAAC;;2DACH;AAdlC,kEAeC;AAED,MAAa,yBAA0B,SAAQ,gCAA6B;IAc1E,IAAI,UAAU;QACZ,MAAM,IAAI,KAAK,CAAC,qFAAqF,CAAC,CAAC;IACzG,CAAC;IAED,QAAQ;QACN,MAAM,MAAM,GAAG,IAAA,8BAAY,EAAC,IAAI,EAAE,EAAC,SAAS,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAC,CAAC,CAAC;QACjF,IAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,EAAE;YAClB,4BAA4B;YAC5B,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7D,MAAM,IAAI,KAAK,CAAC,kCAAkC,SAAS,EAAE,CAAC,CAAC;SAChE;IACH,CAAC;CACF;AAzBC;IAAC,IAAA,wBAAM,EAAC,OAAO,CAAC;;8DACI;AACpB;IAAC,IAAA,gCAAc,GAAE;IAChB,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,oBAAoB,CAAC;IAChC,IAAA,0BAAQ,GAAE;8BACF,oBAAoB;0DAAC;AAC9B;IAAC,IAAA,0BAAQ,GAAE;;yDACI;AACf;IAAC,IAAA,yBAAO,GAAE;IACT,IAAA,gCAAc,GAAE;IAChB,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,2BAA2B,CAAC;;8DACD;AAZzC,8DA0BC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {ProjectManifestBaseImpl} from '@subql/common';\nimport {\n  SubstrateDatasourceKind,\n  SubstrateHandlerKind,\n  SubstrateNetworkFilter,\n  SubstrateRuntimeHandler,\n} from '@subql/types';\nimport {plainToClass, Transform, Type} from 'class-transformer';\nimport {\n  Equals,\n  IsArray,\n  IsEnum,\n  IsInt,\n  IsObject,\n  IsOptional,\n  IsString,\n  ValidateNested,\n  validateSync,\n} from 'class-validator';\nimport {ChainTypes, SubqlNetworkFilterImpl, EventHandler, CallHandler, BlockHandler} from '../../models';\nimport {SubstrateProjectNetworkConfig} from '../../types';\nimport {ManifestV0_0_1Mapping, ProjectManifestV0_0_1, RuntimeDataSourceV0_0_1} from './types';\n\nexport class ProjectNetworkV0_0_1 extends ChainTypes implements SubstrateProjectNetworkConfig {\n  @IsString()\n  endpoint: string;\n  @IsString()\n  @IsOptional()\n  dictionary?: string;\n}\n\nexport class RuntimeMappingV0_0_1 implements ManifestV0_0_1Mapping {\n  @Transform((params) => {\n    const handlers: SubstrateRuntimeHandler[] = params.value;\n    return handlers.map((handler) => {\n      switch (handler.kind) {\n        case SubstrateHandlerKind.Event:\n          return plainToClass(EventHandler, handler);\n        case SubstrateHandlerKind.Call:\n          return plainToClass(CallHandler, handler);\n        case SubstrateHandlerKind.Block:\n          return plainToClass(BlockHandler, handler);\n        default:\n          throw new Error(`handler ${(handler as any).kind} not supported`);\n      }\n    });\n  })\n  @IsArray()\n  @ValidateNested()\n  handlers: SubstrateRuntimeHandler[];\n}\n\nexport class RuntimeDataSourceV0_0_1Impl implements RuntimeDataSourceV0_0_1 {\n  @IsString()\n  name: string;\n  @IsEnum(SubstrateDatasourceKind, {groups: [SubstrateDatasourceKind.Runtime]})\n  kind: SubstrateDatasourceKind.Runtime;\n  @Type(() => RuntimeMappingV0_0_1)\n  @ValidateNested()\n  mapping: RuntimeMappingV0_0_1;\n  @IsOptional()\n  @IsInt()\n  startBlock?: number;\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => SubqlNetworkFilterImpl)\n  filter?: SubstrateNetworkFilter;\n}\n\nexport class ProjectManifestV0_0_1Impl extends ProjectManifestBaseImpl<null> implements ProjectManifestV0_0_1 {\n  @Equals('0.0.1')\n  specVersion: string;\n  @ValidateNested()\n  @Type(() => ProjectNetworkV0_0_1)\n  @IsObject()\n  network: ProjectNetworkV0_0_1;\n  @IsString()\n  schema: string;\n  @IsArray()\n  @ValidateNested()\n  @Type(() => RuntimeDataSourceV0_0_1Impl)\n  dataSources: RuntimeDataSourceV0_0_1[];\n\n  get deployment(): null {\n    throw new Error('Manifest spec 0.0.1 is not support for deployment, please migrate to 0.2.0 or above');\n  }\n\n  validate(): void {\n    const errors = validateSync(this, {whitelist: true, forbidNonWhitelisted: true});\n    if (errors?.length) {\n      // TODO: print error details\n      const errorMsgs = errors.map((e) => e.toString()).join('\\n');\n      throw new Error(`failed to parse project.yaml.\\n${errorMsgs}`);\n    }\n  }\n}\n"]}