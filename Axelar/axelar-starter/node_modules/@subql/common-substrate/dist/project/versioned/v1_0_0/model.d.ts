import { NodeSpec, ProjectManifestBaseImpl, QuerySpec, RunnerSpecs } from '@subql/common';
import { SubstrateRuntimeDatasource } from '@subql/types';
import { CustomDatasourceV0_2_0, FileType, RuntimeDataSourceV0_2_0 } from '../v0_2_0';
import { CustomDatasourceTemplate, RuntimeDatasourceTemplate } from '../v0_2_1';
import { SubstrateProjectManifestV1_0_0 } from './types';
export declare class SubstrateRunnerNodeImpl implements NodeSpec {
    name: string;
    version: string;
}
export declare class SubstrateRunnerSpecsImpl implements RunnerSpecs {
    node: NodeSpec;
    query: QuerySpec;
}
export declare class ProjectNetworkDeploymentV1_0_0 {
    chainId: string;
    chaintypes?: FileType;
    bypassBlocks?: (number | string)[];
}
export declare class ProjectNetworkV1_0_0 extends ProjectNetworkDeploymentV1_0_0 {
    endpoint?: string;
    dictionary?: string;
}
export declare class DeploymentV1_0_0 {
    network: ProjectNetworkDeploymentV1_0_0;
    specVersion: string;
    runner: RunnerSpecs;
    schema: FileType;
    dataSources: (RuntimeDataSourceV0_2_0 | CustomDatasourceV0_2_0)[];
    templates?: (RuntimeDatasourceTemplate | CustomDatasourceTemplate)[];
}
export declare class ProjectManifestV1_0_0Impl<D extends object = DeploymentV1_0_0> extends ProjectManifestBaseImpl<D> implements SubstrateProjectManifestV1_0_0 {
    specVersion: string;
    dataSources: (SubstrateRuntimeDatasource | CustomDatasourceV0_2_0)[];
    network: ProjectNetworkV1_0_0;
    name: string;
    version: string;
    schema: FileType;
    templates?: (RuntimeDatasourceTemplate | CustomDatasourceTemplate)[];
    runner: RunnerSpecs;
    protected _deployment: D;
    get deployment(): D;
}
