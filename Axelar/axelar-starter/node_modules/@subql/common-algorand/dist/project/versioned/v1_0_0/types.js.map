{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/project/versioned/v1_0_0/types.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAGtC,0DAO+B;AA6B/B,SAAgB,yBAAyB,CAAC,UAA8B;IACtE,OAAO,UAAU,CAAC,IAAI,KAAK,uCAAsB,CAAC,OAAO,IAAI,CAAC,CAAE,UAAsC,CAAC,OAAO,CAAC,IAAI,CAAC;AACtH,CAAC;AAFD,8DAEC","sourcesContent":["// Copyright 2020-2021 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {TemplateBase} from '@subql/common';\nimport {\n  AlgorandCustomDataSource,\n  AlgorandDataSource,\n  AlgorandDataSourceKind,\n  AlgorandHandler,\n  AlgorandMapping,\n  AlgorandRuntimeDataSource,\n} from '@subql/types-algorand';\nimport {IAlgorandProjectManifest} from '../../types';\n\nexport interface SubqlMappingV1_0_0<T extends AlgorandHandler> extends AlgorandMapping<T> {\n  file: string;\n}\n\nexport type RuntimeDataSourceV1_0_0 = AlgorandRuntimeDataSource;\nexport type CustomDataSourceV1_0_0 = AlgorandCustomDataSource;\n\nexport interface RuntimeDataSourceTemplate extends Omit<RuntimeDataSourceV1_0_0, 'name'>, TemplateBase {}\nexport interface CustomDataSourceTemplate extends Omit<CustomDataSourceV1_0_0, 'name'>, TemplateBase {}\n\nexport interface ProjectManifestV1_0_0 extends IAlgorandProjectManifest {\n  name: string;\n  version: string;\n  schema: {\n    file: string;\n  };\n\n  network: {\n    endpoint?: string;\n    dictionary?: string;\n    chainId: string;\n  };\n\n  dataSources: (RuntimeDataSourceV1_0_0 | CustomDataSourceV1_0_0)[];\n}\n\nexport function isRuntimeDataSourceV1_0_0(dataSource: AlgorandDataSource): dataSource is RuntimeDataSourceV1_0_0 {\n  return dataSource.kind === AlgorandDataSourceKind.Runtime && !!(dataSource as RuntimeDataSourceV1_0_0).mapping.file;\n}\n"]}