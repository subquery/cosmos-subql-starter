import { AlgorandDataSource } from '@subql/types-algorand';
import { IAlgorandProjectManifest } from '../types';
import { ProjectManifestV1_0_0Impl } from './v1_0_0';
export declare type VersionedProjectManifest = {
    specVersion: string;
};
declare const ALGORAND_SUPPORTED_VERSIONS: {
    '1.0.0': typeof ProjectManifestV1_0_0Impl;
};
declare type Versions = keyof typeof ALGORAND_SUPPORTED_VERSIONS;
declare type ProjectManifestImpls = InstanceType<typeof ALGORAND_SUPPORTED_VERSIONS[Versions]>;
export declare function manifestIsV1_0_0(manifest: IAlgorandProjectManifest): manifest is ProjectManifestV1_0_0Impl;
export declare class AlgorandProjectManifestVersioned implements IAlgorandProjectManifest {
    private _impl;
    constructor(projectManifest: VersionedProjectManifest);
    get asImpl(): ProjectManifestImpls;
    get isV1_0_0(): boolean;
    get asV1_0_0(): ProjectManifestV1_0_0Impl;
    toDeployment(): string | undefined;
    validate(): void;
    get dataSources(): AlgorandDataSource[];
    get schema(): string;
    get specVersion(): string;
    get description(): string;
    get repository(): string;
}
export {};
