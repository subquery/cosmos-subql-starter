{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../src/project/versioned/v1_0_0/model.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  BaseMapping,\n  NodeSpec,\n  ProjectManifestBaseImpl,\n  QuerySpec,\n  RunnerQueryBaseModel,\n  RunnerSpecs,\n  SemverVersionValidator,\n} from '@subql/common';\nimport {AlgorandCustomDataSource} from '@subql/types-algorand';\nimport {plainToClass, Transform, Type} from 'class-transformer';\nimport {\n  Equals,\n  IsArray,\n  IsNotEmpty,\n  IsObject,\n  IsOptional,\n  IsString,\n  Validate,\n  ValidateNested,\n  validateSync,\n} from 'class-validator';\nimport yaml from 'js-yaml';\nimport {CustomDataSourceBase, RuntimeDataSourceBase} from '../../models';\nimport {TokenHeader} from '../../types';\nimport {IsStringOrObject} from '../../validation/is-string-or-object.validation';\nimport {\n  CustomDataSourceTemplate,\n  CustomDataSourceV1_0_0,\n  ProjectManifestV1_0_0,\n  RuntimeDataSourceTemplate,\n  RuntimeDataSourceV1_0_0,\n} from './types';\n\nconst ALGORAND_NODE_NAME = `@subql/node-algorand`;\n\nexport class AlgorandRunnerNodeImpl implements NodeSpec {\n  @Equals(ALGORAND_NODE_NAME, {message: `Runner algorand node name incorrect, suppose be '${ALGORAND_NODE_NAME}'`})\n  name: string;\n\n  @IsString()\n  @Validate(SemverVersionValidator)\n  version: string;\n}\n\nexport class AlgorandRunnerSpecsImpl implements RunnerSpecs {\n  @IsObject()\n  @ValidateNested()\n  @Type(() => AlgorandRunnerNodeImpl)\n  node: NodeSpec;\n\n  @IsObject()\n  @ValidateNested()\n  @Type(() => RunnerQueryBaseModel)\n  query: QuerySpec;\n}\n\nexport class FileType {\n  @IsString()\n  file: string;\n}\n\nexport class ProjectNetworkDeploymentV1_0_0 {\n  @IsString()\n  chainId: string;\n}\n\nexport class ProjectNetworkV1_0_0 extends ProjectNetworkDeploymentV1_0_0 {\n  @IsString()\n  @IsNotEmpty()\n  endpoint: string;\n\n  @IsString()\n  @IsOptional()\n  dictionary?: string;\n\n  @IsString()\n  @IsOptional()\n  genesisHash?: string;\n\n  @IsStringOrObject()\n  @IsOptional()\n  apiKey: string | TokenHeader;\n}\n\nfunction validateObject(object: any, errorMessage = 'failed to validate object.'): void {\n  const errors = validateSync(object, {whitelist: true, forbidNonWhitelisted: true});\n  if (errors?.length) {\n    // TODO: print error details\n    const errorMsgs = errors.map((e) => e.toString()).join('\\n');\n    throw new Error(`${errorMessage}\\n${errorMsgs}`);\n  }\n}\n\nexport class AlgorandRuntimeDataSourceV1_0_0Impl extends RuntimeDataSourceBase implements RuntimeDataSourceV1_0_0 {\n  validate(): void {\n    return validateObject(this, 'failed to validate runtime datasource.');\n  }\n}\n\nexport class AlgorandCustomDataSourceV1_0_0Impl<\n    K extends string = string,\n    M extends BaseMapping<any, any> = BaseMapping<Record<string, unknown>, any>\n  >\n  extends CustomDataSourceBase<K, M>\n  implements AlgorandCustomDataSource<K, M>\n{\n  validate(): void {\n    return validateObject(this, 'failed to validate custom datasource.');\n  }\n}\n\nexport class RuntimeDataSourceTemplateImpl\n  extends AlgorandRuntimeDataSourceV1_0_0Impl\n  implements RuntimeDataSourceTemplate\n{\n  @IsString()\n  name: string;\n}\n\nexport class CustomDataSourceTemplateImpl\n  extends AlgorandCustomDataSourceV1_0_0Impl\n  implements CustomDataSourceTemplate\n{\n  @IsString()\n  name: string;\n}\n\nexport class DeploymentV1_0_0 {\n  @Transform((params) => {\n    if (params.value.genesisHash && !params.value.chainId) {\n      params.value.chainId = params.value.genesisHash;\n    }\n    return plainToClass(ProjectNetworkDeploymentV1_0_0, params.value);\n  })\n  @ValidateNested()\n  @Type(() => ProjectNetworkDeploymentV1_0_0)\n  network: ProjectNetworkDeploymentV1_0_0;\n  @Equals('1.0.0')\n  @IsString()\n  specVersion: string;\n  @IsObject()\n  @ValidateNested()\n  @Type(() => AlgorandRunnerSpecsImpl)\n  runner: RunnerSpecs;\n\n  @ValidateNested()\n  @Type(() => FileType)\n  schema: FileType;\n\n  @IsArray()\n  @ValidateNested()\n  @Type(() => AlgorandCustomDataSourceV1_0_0Impl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: AlgorandRuntimeDataSourceV1_0_0Impl, name: 'algorand/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  dataSources: (RuntimeDataSourceV1_0_0 | CustomDataSourceV1_0_0)[];\n  @IsOptional()\n  @IsArray()\n  @ValidateNested()\n  @Type(() => CustomDataSourceTemplateImpl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: RuntimeDataSourceTemplateImpl, name: 'algorand/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  templates?: (RuntimeDataSourceTemplate | CustomDataSourceTemplate)[];\n}\n\nexport class ProjectManifestV1_0_0Impl\n  extends ProjectManifestBaseImpl<DeploymentV1_0_0>\n  implements ProjectManifestV1_0_0\n{\n  @Equals('1.0.0')\n  specVersion: string;\n\n  @IsString()\n  name: string;\n\n  @IsString()\n  version: string;\n\n  @IsObject()\n  @ValidateNested()\n  @Type(() => ProjectNetworkV1_0_0)\n  network: ProjectNetworkV1_0_0;\n\n  @ValidateNested()\n  @Type(() => FileType)\n  schema: FileType;\n\n  @IsArray()\n  @ValidateNested()\n  @Type(() => AlgorandCustomDataSourceV1_0_0Impl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: AlgorandRuntimeDataSourceV1_0_0Impl, name: 'algorand/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  dataSources: (RuntimeDataSourceV1_0_0 | CustomDataSourceV1_0_0)[];\n\n  @IsOptional()\n  @IsArray()\n  @ValidateNested()\n  @Type(() => CustomDataSourceTemplateImpl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: RuntimeDataSourceTemplateImpl, name: 'algorand/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  templates?: (RuntimeDataSourceTemplate | CustomDataSourceTemplate)[];\n\n  @IsObject()\n  @ValidateNested()\n  @Type(() => AlgorandRunnerSpecsImpl)\n  runner: RunnerSpecs;\n\n  private _deployment: DeploymentV1_0_0;\n\n  toDeployment(): string {\n    return yaml.dump(this._deployment, {\n      sortKeys: true,\n      condenseFlow: true,\n    });\n  }\n\n  get deployment(): DeploymentV1_0_0 {\n    if (!this._deployment) {\n      this._deployment = plainToClass(DeploymentV1_0_0, this);\n      validateSync(this._deployment, {whitelist: true});\n    }\n    return this._deployment;\n  }\n\n  validate(): void {\n    const errors = validateSync(this.deployment, {whitelist: true, forbidNonWhitelisted: true});\n    if (errors?.length) {\n      // TODO: print error details\n      const errorMsgs = errors.map((e) => e.toString()).join('\\n');\n      throw new Error(`failed to parse project.yaml.\\n${errorMsgs}`);\n    }\n  }\n}\n"]}