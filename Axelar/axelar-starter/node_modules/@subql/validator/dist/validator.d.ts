import { NETWORK_FAMILY, Reader, ReaderOptions } from '@subql/common';
import { Rule } from './rules';
export interface Report {
    name: string;
    skipped: boolean;
    description: string;
    valid: boolean;
}
export declare class Validator {
    private readonly reader;
    private readonly location;
    private readonly networkFamily?;
    private readonly rules;
    static create(location: string, opts?: ReaderOptions, networkFamily?: NETWORK_FAMILY): Promise<Validator>;
    constructor(reader: Reader, location: string, networkFamily?: NETWORK_FAMILY);
    addRule(...rules: Rule[]): void;
    getValidateReports(): Promise<Report[]>;
    validate(): Promise<boolean>;
}
