{"version":3,"file":"validator.spec.js","sourceRoot":"","sources":["../src/validator.spec.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;AAEtC,0CAAiE;AACjE,mCAAqD;AACrD,2CAAsC;AAEtC,QAAQ,CAAC,4CAA4C,EAAE,GAAG,EAAE;IAC1D,IAAI,CAAY,CAAC;IACjB,MAAM,GAAG,GAAG,uDAAuD,CAAC;IAEpE,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,CAAC,GAAG,MAAM,qBAAS,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,uBAAc,CAAC,SAAS,CAAC,CAAC;QAChE,CAAC,CAAC,OAAO,CAAC,GAAG,mBAAW,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2EAA2E,EAAE,KAAK,IAAI,EAAE;QACzF,MAAM,EAAE,GAAG,MAAM,qBAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACvC,EAAE,CAAC,OAAO,CAAC,GAAG,mBAAW,CAAC,CAAC;QAC3B,MAAM,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,2DAA2D,CAAC,CAAC;IACrH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,kBAAkB,EAAE,CAAC;QAC5C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;QAClC,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;IAC9B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,kEAAkE,EAAE,GAAG,EAAE;IAChF,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,GAAG,GAAG,uDAAuD,CAAC;QACpE,MAAM,CAAC,GAAG,MAAM,qBAAS,CAAC,MAAM,CAAC,GAAG,EAAE,EAAC,IAAI,EAAE,2BAAkB,EAAC,CAAC,CAAC;QAClE,CAAC,CAAC,OAAO,CAAC,GAAG,uBAAe,CAAC,CAAC;QAC9B,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,kBAAkB,EAAE,CAAC;QAC5C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,GAAG,GAAG,4DAA4D,CAAC;QACzE,MAAM,CAAC,GAAG,MAAM,qBAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACtC,CAAC,CAAC,OAAO,CAAC,GAAG,mBAAW,CAAC,CAAC;QAC1B,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,kBAAkB,EAAE,CAAC;QAC5C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {IPFS_NODE_ENDPOINT, NETWORK_FAMILY} from '@subql/common';\nimport {commonRules, deploymentRules} from './rules';\nimport {Validator} from './validator';\n\ndescribe('Validate project below manifest spec 1.0.0', () => {\n  let v: Validator;\n  const url = 'https://github.com/subquery/tutorials-block-timestamp';\n\n  beforeAll(async () => {\n    v = await Validator.create(url, null, NETWORK_FAMILY.substrate);\n    v.addRule(...commonRules);\n  });\n\n  it('should throw error if manifest is below 1.0.0 and network is not provided', async () => {\n    const v1 = await Validator.create(url);\n    v1.addRule(...commonRules);\n    await expect(v1.getValidateReports()).rejects.toThrow(/Can not identify project network under spec version 1.0.0/);\n  });\n\n  it('should validate get reports', async () => {\n    const result = await v.getValidateReports();\n    expect(result.filter((r) => r.valid).length).toBe(result.length);\n  });\n\n  it('should return validate result', async () => {\n    const result = await v.validate();\n    expect(result).toBeTruthy();\n  });\n});\n\ndescribe('Validate project with manifest spec 1.0.0, auto identify network', () => {\n  it('should validate IPFS deployment', async () => {\n    const cid = 'ipfs://QmVX1aaJRL9f5Vgjr8VJ9MWAcFHzAya9omnQ534JYCigCQ';\n    const v = await Validator.create(cid, {ipfs: IPFS_NODE_ENDPOINT});\n    v.addRule(...deploymentRules);\n    const result = await v.getValidateReports();\n    expect(result.filter((r) => r.valid).length).toBe(result.length);\n  });\n\n  it('should validate get reports', async () => {\n    const url = 'https://github.com/subquery/tutorials-frontier-evm-starter';\n    const v = await Validator.create(url);\n    v.addRule(...commonRules);\n    const result = await v.getValidateReports();\n    expect(result.filter((r) => r.valid).length).toBe(result.length);\n  });\n});\n"]}