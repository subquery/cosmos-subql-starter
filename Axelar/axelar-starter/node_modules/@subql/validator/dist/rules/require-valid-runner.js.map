{"version":3,"file":"require-valid-runner.js","sourceRoot":"","sources":["../../src/rules/require-valid-runner.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAGtC,iCAAsC;AAEtC,MAAa,kBAAkB;IAA/B;QACE,SAAI,GAAG,eAAQ,CAAC,MAAM,CAAC;QACvB,SAAI,GAAG,sBAAsB,CAAC;QAC9B,gBAAW,GAAG,sCAAsC,CAAC;IAavD,CAAC;IAXC,QAAQ,CAAC,GAAY;QACnB,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,IAAI;gBACF,MAAM,CAAC,YAAY,EAAE,CAAC;aACvB;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,KAAK,CAAC;aACd;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAhBD,gDAgBC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {Context} from '../context';\nimport {Rule, RuleType} from './rule';\n\nexport class RequireValidRunner implements Rule {\n  type = RuleType.Schema;\n  name = 'require-valid-runner';\n  description = '`runner` must match the `datasource`';\n\n  validate(ctx: Context): boolean {\n    const schema = ctx.data.schema;\n    if (schema.isV1_0_0) {\n      try {\n        schema.toDeployment();\n      } catch (e) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n"]}