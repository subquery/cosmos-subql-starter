"use strict";
// Copyright 2020-2022 OnFinality Limited authors & contributors
// SPDX-License-Identifier: Apache-2.0
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectManifestV0_3_0Impl = exports.DeploymentV0_3_0 = void 0;
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
const v0_2_0_1 = require("../v0_2_0");
class DeploymentV0_3_0 {
}
__decorate([
    (0, class_validator_1.Equals)('0.3.0'),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], DeploymentV0_3_0.prototype, "specVersion", void 0);
__decorate([
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => v0_2_0_1.FileType),
    __metadata("design:type", v0_2_0_1.FileType)
], DeploymentV0_3_0.prototype, "schema", void 0);
__decorate([
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => v0_2_0_1.SubstrateCustomDataSourceV0_2_0Impl, {
        discriminator: {
            property: 'kind',
            subTypes: [{ value: v0_2_0_1.SubstrateRuntimeDataSourceV0_2_0Impl, name: 'substrate/Runtime' }],
        },
        keepDiscriminatorProperty: true,
    }),
    __metadata("design:type", Array)
], DeploymentV0_3_0.prototype, "dataSources", void 0);
__decorate([
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => v0_2_0_1.ProjectNetworkDeploymentV0_2_0),
    __metadata("design:type", v0_2_0_1.ProjectNetworkDeploymentV0_2_0)
], DeploymentV0_3_0.prototype, "network", void 0);
exports.DeploymentV0_3_0 = DeploymentV0_3_0;
class ProjectManifestV0_3_0Impl extends v0_2_0_1.ProjectManifestV0_2_0Impl {
    get deployment() {
        if (!this._deployment) {
            this._deployment = (0, class_transformer_1.plainToClass)(DeploymentV0_3_0, this);
            (0, class_validator_1.validateSync)(this._deployment, { whitelist: true });
        }
        return this._deployment;
    }
}
__decorate([
    (0, class_validator_1.Equals)('0.3.0'),
    __metadata("design:type", String)
], ProjectManifestV0_3_0Impl.prototype, "specVersion", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProjectManifestV0_3_0Impl.prototype, "name", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProjectManifestV0_3_0Impl.prototype, "version", void 0);
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => v0_2_0_1.ProjectNetworkV0_2_0),
    __metadata("design:type", v0_2_0_1.ProjectNetworkV0_2_0)
], ProjectManifestV0_3_0Impl.prototype, "network", void 0);
__decorate([
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => v0_2_0_1.FileType),
    __metadata("design:type", v0_2_0_1.FileType)
], ProjectManifestV0_3_0Impl.prototype, "schema", void 0);
__decorate([
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => v0_2_0_1.SubstrateCustomDataSourceV0_2_0Impl, {
        discriminator: {
            property: 'kind',
            subTypes: [{ value: v0_2_0_1.SubstrateRuntimeDataSourceV0_2_0Impl, name: 'substrate/Runtime' }],
        },
        keepDiscriminatorProperty: true,
    }),
    __metadata("design:type", Array)
], ProjectManifestV0_3_0Impl.prototype, "dataSources", void 0);
exports.ProjectManifestV0_3_0Impl = ProjectManifestV0_3_0Impl;
//# sourceMappingURL=model.js.map