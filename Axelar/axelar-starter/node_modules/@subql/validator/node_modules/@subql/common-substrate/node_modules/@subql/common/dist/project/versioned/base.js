"use strict";
// Copyright 2020-2022 OnFinality Limited authors & contributors
// SPDX-License-Identifier: Apache-2.0
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectManifestBaseImpl = void 0;
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
const js_yaml_1 = __importDefault(require("js-yaml"));
class ProjectManifestBaseImpl {
    toDeployment() {
        // classToPlain fixes Map type with assets fields
        return js_yaml_1.default.dump((0, class_transformer_1.classToPlain)(this.deployment), {
            sortKeys: true,
            condenseFlow: true,
        });
    }
    validate() {
        const errors = (0, class_validator_1.validateSync)(this.deployment, { whitelist: true, forbidNonWhitelisted: true });
        if (errors === null || errors === void 0 ? void 0 : errors.length) {
            // TODO: print error details
            const errorMsgs = errors.map((e) => e.toString()).join('\n');
            throw new Error(`failed to parse project.yaml.\n${errorMsgs}`);
        }
    }
}
__decorate([
    (0, class_validator_1.Allow)(),
    __metadata("design:type", Object)
], ProjectManifestBaseImpl.prototype, "definitions", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProjectManifestBaseImpl.prototype, "description", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProjectManifestBaseImpl.prototype, "repository", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProjectManifestBaseImpl.prototype, "specVersion", void 0);
exports.ProjectManifestBaseImpl = ProjectManifestBaseImpl;
//# sourceMappingURL=base.js.map