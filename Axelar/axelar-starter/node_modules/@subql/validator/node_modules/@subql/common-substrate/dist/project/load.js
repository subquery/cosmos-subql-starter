"use strict";
// Copyright 2020-2022 OnFinality Limited authors & contributors
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseChainTypes = exports.loadSubstrateProjectManifest = exports.parseSubstrateProjectManifest = void 0;
const common_1 = require("@subql/common");
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
// import {NodeVM, VMScript} from 'vm2';
const models_1 = require("./models");
const versioned_1 = require("./versioned");
function parseSubstrateProjectManifest(raw) {
    const projectManifest = new versioned_1.SubstrateProjectManifestVersioned(raw);
    projectManifest.validate();
    return projectManifest;
}
exports.parseSubstrateProjectManifest = parseSubstrateProjectManifest;
function loadSubstrateProjectManifest(file) {
    const doc = (0, common_1.loadFromJsonOrYaml)((0, common_1.getManifestPath)(file));
    const projectManifest = new versioned_1.SubstrateProjectManifestVersioned(doc);
    projectManifest.validate();
    return projectManifest;
}
exports.loadSubstrateProjectManifest = loadSubstrateProjectManifest;
function parseChainTypes(raw) {
    const chainTypes = (0, class_transformer_1.plainToClass)(models_1.ChainTypes, raw);
    if (!!chainTypes.types ||
        !!chainTypes.typesChain ||
        !!chainTypes.typesBundle ||
        !!chainTypes.typesAlias ||
        !!chainTypes.typesSpec) {
        const errors = (0, class_validator_1.validateSync)(chainTypes, { whitelist: true, forbidNonWhitelisted: true });
        if (errors === null || errors === void 0 ? void 0 : errors.length) {
            // TODO: print error details
            const errorMsgs = errors.map((e) => e.toString()).join('\n');
            throw new Error(`failed to parse chain types.\n${errorMsgs}`);
        }
        return chainTypes;
    }
    else {
        throw new Error(`chainTypes is not valid`);
    }
}
exports.parseChainTypes = parseChainTypes;
//# sourceMappingURL=load.js.map