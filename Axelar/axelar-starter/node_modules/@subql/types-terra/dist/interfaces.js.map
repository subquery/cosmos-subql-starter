{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../src/interfaces.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {BlockInfo, Event, TxInfo, TxLog, Msg, WasmMsg} from '@terra-money/terra.js';\n\nexport interface Entity {\n  id: string;\n}\n\nexport type FunctionPropertyNames<T> = {\n  [K in keyof T]: T[K] extends Function ? K : never;\n}[keyof T];\n\nexport interface Store {\n  get(entity: string, id: string): Promise<Entity | null>;\n  getByField(entity: string, field: string, value): Promise<Entity[]>;\n  getOneByField(entity: string, field: string, value): Promise<Entity | null>;\n  set(entity: string, id: string, data: Entity): Promise<void>;\n  bulkCreate(entity: string, data: Entity[]): Promise<void>;\n  remove(entity: string, id: string): Promise<void>;\n}\n\nexport interface TerraBlock {\n  block: BlockInfo;\n  txs: TxInfo[];\n}\n\nexport interface TerraTransaction {\n  idx: number;\n  block: TerraBlock;\n  tx: TxInfo;\n}\n\nexport interface TerraMessage<M extends Msg = Msg> {\n  idx: number;\n  block: TerraBlock;\n  tx: TerraTransaction;\n  msg: M;\n}\n\nexport interface TerraEvent<M extends Msg = Msg> {\n  idx: number;\n  block: TerraBlock;\n  tx: TerraTransaction;\n  msg: TerraMessage<M>;\n  log: TxLog;\n  event: Event;\n}\n\nexport type TerraContractMessage = TerraMessage<WasmMsg>;\n\nexport type DynamicDatasourceCreator = (name: string, args: Record<string, unknown>) => Promise<void>;\n"]}