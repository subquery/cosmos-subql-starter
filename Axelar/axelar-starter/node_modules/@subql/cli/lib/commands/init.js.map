{"version":3,"file":"init.js","sourceRoot":"","sources":["../../src/commands/init.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport fs from 'fs';\nimport path from 'path';\nimport {URL} from 'url';\nimport {Command, Flags} from '@oclif/core';\nimport {NETWORK_FAMILY} from '@subql/common';\nimport chalk from 'chalk';\nimport cli from 'cli-ux';\nimport fuzzy from 'fuzzy';\nimport * as inquirer from 'inquirer';\nimport {uniq} from 'lodash';\nimport {\n  fetchTemplates,\n  Template,\n  installDependencies,\n  cloneProjectTemplate,\n  cloneProjectGit,\n  readDefaults,\n  prepare,\n} from '../controller/init-controller';\nimport {ProjectSpecBase} from '../types';\ninquirer.registerPrompt('autocomplete', require('inquirer-autocomplete-prompt'));\n\n// Helper function for fuzzy search on prompt input\nfunction filterInput(arr: string[]) {\n  return (_: any, input: string) => {\n    input = input || '';\n    return new Promise((resolve) => {\n      resolve(\n        fuzzy.filter(input, arr).map((el) => {\n          return el.original;\n        })\n      );\n    });\n  };\n}\n\nasync function promptValidRemoteAndBranch(): Promise<string[]> {\n  let isValid = false;\n  let remote: string;\n  while (!isValid) {\n    try {\n      remote = await cli.prompt('Custom template git remote', {\n        required: true,\n      });\n      new URL(remote);\n      isValid = true;\n    } catch (e) {\n      console.log(`Not a valid git remote URL: '${remote}', try again`);\n      continue;\n    }\n  }\n  const branch = await cli.prompt('Custom template git branch', {\n    required: true,\n  });\n  return [remote, branch];\n}\n\n//\n\nexport default class Init extends Command {\n  static description = 'Initialize a scaffold subquery project';\n\n  static flags = {\n    force: Flags.boolean({char: 'f'}),\n    location: Flags.string({char: 'l', description: 'local folder to create the project in'}),\n    'install-dependencies': Flags.boolean({description: 'Install dependencies as well', default: false}),\n    npm: Flags.boolean({description: 'Force using NPM instead of yarn, only works with `install-dependencies` flag'}),\n  };\n\n  static args = [\n    {\n      name: 'projectName',\n      description: 'Give the starter project name',\n    },\n  ];\n  private projectPath: string; //path on GitHub\n  private project: ProjectSpecBase;\n  private location: string;\n  private networkFamily: NETWORK_FAMILY;\n  private network: string;\n\n  async run(): Promise<void> {\n    const {args, flags} = await this.parse(Init);\n\n    this.location = flags.location ? path.resolve(flags.location) : process.cwd();\n    this.project = {} as ProjectSpecBase;\n    this.project.name = args.projectName\n      ? args.projectName\n      : await cli.prompt('Project name', {default: 'subql-starter', required: true});\n    if (fs.existsSync(path.join(this.location, `${this.project.name}`))) {\n      throw new Error(`Directory ${this.project.name} exists, try another project name`);\n    }\n\n    let templates: Template[];\n    let selectedTemplate: Template;\n\n    templates = await fetchTemplates();\n    await this.observeTemplates(templates, flags);\n\n    //Family selection\n    const families = uniq(templates.map(({family}) => family)).sort();\n    await inquirer\n      .prompt([\n        {\n          name: 'familyResponse',\n          message: 'Select a network family',\n          type: 'autocomplete',\n          searchText: '',\n          emptyText: 'Network family not found',\n          pageSize: 20,\n          source: filterInput(families),\n        },\n      ])\n      .then(({familyResponse}) => {\n        this.networkFamily = familyResponse;\n      });\n    templates = templates.filter(({family}) => family === this.networkFamily);\n    await this.observeTemplates(templates, flags);\n\n    // Network selection\n    const networks = uniq(templates.map(({network}) => network)).sort();\n    await inquirer\n      .prompt([\n        {\n          name: 'networkResponse',\n          message: 'Select a network',\n          type: 'autocomplete',\n          searchText: '',\n          emptyText: 'Network not found',\n          pageSize: 20,\n          source: filterInput(networks),\n        },\n      ])\n      .then(({networkResponse}) => {\n        this.network = networkResponse;\n      });\n    const candidateTemplates = templates.filter(({network}) => network === this.network);\n    await this.observeTemplates(candidateTemplates, flags);\n\n    // Templates selection\n    const paddingWidth = candidateTemplates.map(({name}) => name.length).reduce((acc, xs) => Math.max(acc, xs)) + 5;\n    const templateDisplays = candidateTemplates.map(\n      ({description, name}) => `${name.padEnd(paddingWidth, ' ')}${chalk.gray(description)}`\n    );\n    templateDisplays.push(`${'Other'.padEnd(paddingWidth, ' ')}${chalk.gray('Enter a custom git endpoint')}`);\n    await inquirer\n      .prompt([\n        {\n          name: 'templateDisplay',\n          message: 'Select a template project',\n          type: 'autocomplete',\n          searchText: '',\n          emptyText: 'Template not found',\n          source: filterInput(templateDisplays),\n        },\n      ])\n      .then(async ({templateDisplay}) => {\n        const templateName = (templateDisplay as string).split(' ')[0];\n        if (templateName === 'Other') {\n          await this.observeTemplates([], flags);\n        } else {\n          selectedTemplate = templates.find(({name}) => name === templateName);\n          await this.observeTemplates([selectedTemplate], flags);\n        }\n      });\n    this.projectPath = await cloneProjectTemplate(this.location, this.project.name, selectedTemplate);\n    await this.setupProject(flags);\n  }\n  // observe templates, if no option left or manually select use custom templates\n  async observeTemplates(templates: Template[], flags: any): Promise<void> {\n    if (templates.length === 0) {\n      const [gitRemote, gitBranch] = await promptValidRemoteAndBranch();\n      this.projectPath = await cloneProjectGit(this.location, this.project.name, gitRemote, gitBranch);\n    }\n  }\n\n  async setupProject(flags: any): Promise<void> {\n    const [\n      defaultSpecVersion,\n      defaultRepository,\n      defaultEndpoint,\n      defaultAuthor,\n      defaultVersion,\n      defaultDescription,\n      defaultLicense,\n    ] = await readDefaults(this.projectPath);\n\n    // Should use template specVersion as default, otherwise use user provided\n    flags.specVersion = defaultSpecVersion ?? flags.specVersion;\n\n    this.project.endpoint = await cli.prompt('RPC endpoint:', {\n      default: defaultEndpoint ?? 'wss://polkadot.api.onfinality.io/public-ws',\n      required: true,\n    });\n\n    this.project.repository = await cli.prompt('Git repository', {required: false, default: defaultRepository});\n\n    const descriptionHint = defaultDescription.substring(0, 40).concat('...');\n    this.project.author = await cli.prompt('Author', {required: true, default: defaultAuthor});\n    this.project.description = await cli\n      .prompt('Description', {\n        required: false,\n        default: descriptionHint,\n      })\n      .then((description) => {\n        return description === descriptionHint ? defaultDescription : description;\n      });\n\n    this.project.version = await cli.prompt('Version', {required: true, default: defaultVersion});\n    this.project.license = await cli.prompt('License', {required: true, default: defaultLicense});\n\n    cli.action.start('Preparing project');\n    await prepare(this.projectPath, this.project);\n    cli.action.stop();\n    if (flags['install-dependencies']) {\n      cli.action.start('Installing dependencies');\n      installDependencies(this.projectPath, flags.npm);\n      cli.action.stop();\n    }\n    this.log(`${this.project.name} is ready`);\n    process.exit(0);\n  }\n}\n"]}