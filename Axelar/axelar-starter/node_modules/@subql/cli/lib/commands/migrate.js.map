{"version":3,"file":"migrate.js","sourceRoot":"","sources":["../../src/commands/migrate.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,wDAAwB;AACxB,sCAA2C;AAC3C,8DAAwG;AACxG,sDAA4F;AAC5F,yEAAkE;AAElE,MAAqB,OAAQ,SAAQ,cAAO;IAS1C,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,cAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QAC/E,IAAI,QAA2E,CAAC;QAChF,IAAI;YACF,QAAQ,GAAG,IAAA,+CAA4B,EAAC,QAAQ,CAAC,CAAC;SACnD;QAAC,OAAO,CAAC,EAAE;YACV,IAAI;gBACF,QAAQ,GAAG,IAAA,uCAAwB,EAAC,QAAQ,CAAC,CAAC;aAC/C;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,KAAK,CAAC,uDAAuD,CAAC,EAAE,CAAC,CAAC;aACxE;SACF;QACD,IAAI,QAAQ,CAAC,QAAQ,EAAE;YACrB,IAAI,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;SAC1D;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,kDAAkD,CAAC,CAAC;YAChE,MAAM,CAAC,OAAO,EAAE,sBAAsB,CAAC,GAAG,MAAM,IAAA,4BAAO,EAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC5E,MAAM,IAAA,4BAAO,EAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,sBAAsB,CAAC,CAAC;YACnE,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YAClC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACjB;IACH,CAAC;;AA/BH,0BAgCC;AA/BQ,mBAAW,GAAG,6CAA6C,CAAC;AAE5D,aAAK,GAAG;IACb,KAAK,EAAE,YAAK,CAAC,OAAO,CAAC,EAAC,IAAI,EAAE,GAAG,EAAC,CAAC;IACjC,IAAI,EAAE,YAAK,CAAC,MAAM,EAAE;IACpB,QAAQ,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,GAAG,EAAE,WAAW,EAAE,gCAAgC,EAAC,CAAC;CACnF,CAAC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport path from 'path';\nimport {Command, Flags} from '@oclif/core';\nimport {loadSubstrateProjectManifest, SubstrateProjectManifestVersioned} from '@subql/common-substrate';\nimport {loadTerraProjectManifest, TerraProjectManifestVersioned} from '@subql/common-terra';\nimport {migrate, prepare} from '../controller/migrate-controller';\n\nexport default class Migrate extends Command {\n  static description = 'Migrate Subquery project manifest to v1.0.0';\n\n  static flags = {\n    force: Flags.boolean({char: 'f'}),\n    file: Flags.string(),\n    location: Flags.string({char: 'l', description: 'local folder to run migrate in'}),\n  };\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(Migrate);\n    const location = flags.location ? path.resolve(flags.location) : process.cwd();\n    let manifest: SubstrateProjectManifestVersioned | TerraProjectManifestVersioned;\n    try {\n      manifest = loadSubstrateProjectManifest(location);\n    } catch (e) {\n      try {\n        manifest = loadTerraProjectManifest(location);\n      } catch (e) {\n        this.error(`Please validate project manifest before migrate. \\n ${e}`);\n      }\n    }\n    if (manifest.isV1_0_0) {\n      this.log(`* You are already using manifest spec v1.0.0`);\n    } else {\n      console.log(`* Converting manifest to v1.0.0, please provide:`);\n      const [project, chainTypesRelativePath] = await prepare(location, manifest);\n      await migrate(location, project, manifest, chainTypesRelativePath);\n      this.log('* Migration completed');\n      process.exit(0);\n    }\n  }\n}\n"]}