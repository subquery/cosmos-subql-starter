{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/commands/project/index.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,sCAA2C;AAC3C,2DAAqC;AACrC,8EAA8C;AAC9C,8EAA8C;AAI9C,MAAqB,OAAQ,SAAQ,cAAO;IAa1C,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC;QAC7B,IAAI,WAA2B,CAAC;QAEhC,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,QAAQ,GAAG,MAAM,QAAQ,CAAC,MAAM,CAAC;gBACrC;oBACE,IAAI,EAAE,eAAe;oBACrB,OAAO,EAAE,0BAA0B;oBACnC,IAAI,EAAE,MAAM;oBACZ,OAAO,EAAE,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC,CAAC;iBAC9C;aACF,CAAC,CAAC;YACH,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC;SACtC;aAAM;YACL,WAAW,GAAG,MAAwB,CAAC;SACxC;QACD,IAAI,CAAC,GAAG,CAAC,4BAA4B,WAAW,EAAE,CAAC,CAAC;QAEpD,IAAI;YACF,MAAM,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;YACnD,iFAAiF;YACjF,MAAM,aAAa,GAAa,OAAO,CAAC,IAAI;iBACzC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;iBACrF,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAExD,MAAM,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;SAClC;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,GAAG,CAAC,8BAA8B,WAAW,WAAW,CAAC,EAAE,CAAC,CAAC;SACnE;IACH,CAAC;;AA5CH,0BA6CC;AA5CQ,mBAAW,GAAG,uBAAuB,CAAC;AACtC,aAAK,iCACV,OAAO,EAAE,YAAK,CAAC,MAAM,CAAC;QACpB,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;KAC9B,CAAC,IACC,wBAAc,CAAC,KAAK,GACpB,wBAAc,CAAC,KAAK,EACvB;AACK,qBAAa,GAAG;IACrB,MAAM,EAAE,wBAAc;IACtB,MAAM,EAAE,wBAAc;CACvB,CAAC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {Command, Flags} from '@oclif/core';\nimport * as inquirer from 'inquirer';\nimport Create_project from './create-project';\nimport Delete_project from './delete-project';\n\ntype projectOptions = 'create' | 'delete';\n\nexport default class Project extends Command {\n  static description = 'Create/Delete project';\n  static flags = {\n    options: Flags.string({\n      options: ['create', 'delete'],\n    }),\n    ...Delete_project.flags,\n    ...Create_project.flags,\n  };\n  static optionMapping = {\n    create: Create_project,\n    delete: Delete_project,\n  };\n  async run(): Promise<void> {\n    const {flags} = await this.parse(Project);\n    const option = flags.options;\n    let userOptions: projectOptions;\n\n    if (!option) {\n      const response = await inquirer.prompt([\n        {\n          name: 'projectOption',\n          message: 'Select an project option',\n          type: 'list',\n          choices: [{name: 'create'}, {name: 'delete'}],\n        },\n      ]);\n      userOptions = response.projectOption;\n    } else {\n      userOptions = option as projectOptions;\n    }\n    this.log(`Selected project option: ${userOptions}`);\n\n    try {\n      const handler = Project.optionMapping[userOptions];\n      // removes arguments -> deployment and everything before it from the process.argv\n      const stripped_argv: string[] = process.argv\n        .filter((v, idx) => idx > process.argv.indexOf('project') && !v.includes('--options'))\n        .reduce((acc, val) => acc.concat(val.split('=')), []);\n\n      await handler.run(stripped_argv);\n    } catch (e) {\n      this.log(`Failed to execute command: ${userOptions} error: ${e}`);\n    }\n  }\n}\n"]}