{"version":3,"file":"create-project.js","sourceRoot":"","sources":["../../../src/commands/project/create-project.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,wDAAwB;AACxB,sCAA2C;AAC3C,+CAAoE;AACpE,4EAAkE;AAClE,uCAAsD;AAEtD,MAAM,iBAAiB,GAAG,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;AAEtF,MAAqB,cAAe,SAAQ,cAAO;IAejD,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAEjD,IAAI,EAAC,OAAO,EAAE,GAAG,EAAE,WAAW,EAAC,GAAG,KAAK,CAAC;QACxC,MAAM,SAAS,GAAG,MAAM,IAAA,kBAAU,EAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;QAEtF,GAAG,GAAG,MAAM,IAAA,qBAAa,EAAC,GAAG,EAAE,oBAAoB,EAAE,0BAA0B,CAAC,CAAC;QACjF,WAAW,GAAG,MAAM,IAAA,qBAAa,EAAC,WAAW,EAAE,oBAAoB,EAAE,0BAA0B,CAAC,CAAC;QACjG,OAAO,GAAG,MAAM,IAAA,qBAAa,EAAC,OAAO,EAAE,sBAAsB,EAAE,4BAA4B,CAAC,CAAC;QAE7F,MAAM,MAAM,GAAG,MAAM,IAAA,kCAAa,EAChC,GAAG,EACH,KAAK,CAAC,QAAQ,EACd,KAAK,CAAC,OAAO,EACb,WAAW,EACX,SAAS,EACT,OAAO,EACP,KAAK,CAAC,WAAW,EACjB,KAAK,CAAC,UAAU,EAChB,KAAK,CAAC,WAAW,EACjB,6BAAiB,CAClB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9B,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9C,IAAI,CAAC,GAAG,CAAC,iCAAiC,MAAM,CAAC,GAAG;qBACnC,4BAAgB,SAAS,OAAO,aAAa,IAAI,cAAc,CAAC,CAAC;IACpF,CAAC;;AAzCH,iCA0CC;AAzCQ,0BAAW,GAAG,kCAAkC,CAAC;AAEjD,oBAAK,GAAG;IACb,GAAG,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,yBAAyB,EAAC,CAAC;IAC3D,WAAW,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,oBAAoB,EAAC,CAAC;IAC9D,OAAO,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,sBAAsB,EAAC,CAAC;IAE5D,OAAO,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;IACpF,QAAQ,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,gBAAgB,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;IACrF,WAAW,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,mBAAmB,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;IAC3F,UAAU,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,mBAAmB,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;IAC3F,WAAW,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,0BAA0B,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;CACtF,CAAC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport path from 'path';\nimport {Command, Flags} from '@oclif/core';\nimport {BASE_PROJECT_URL, ROOT_API_URL_PROD} from '../../constants';\nimport {createProject} from '../../controller/project-controller';\nimport {checkToken, valueOrPrompt} from '../../utils';\n\nconst ACCESS_TOKEN_PATH = path.resolve(process.env.HOME, '.subql/SUBQL_ACCESS_TOKEN');\n\nexport default class Create_project extends Command {\n  static description = 'Create Project on Hosted Service';\n\n  static flags = {\n    org: Flags.string({description: 'Enter organization name'}),\n    projectName: Flags.string({description: 'Enter project name'}),\n    gitRepo: Flags.string({description: 'Enter git repository'}),\n\n    logoURL: Flags.string({description: 'Enter logo URL', default: '', required: false}),\n    subtitle: Flags.string({description: 'Enter subtitle', default: '', required: false}),\n    description: Flags.string({description: 'Enter description', default: '', required: false}),\n    apiVersion: Flags.string({description: 'Enter api version', default: '2', required: false}),\n    dedicatedDB: Flags.string({description: 'Enter dedicated DataBase', required: false}),\n  };\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(Create_project);\n\n    let {gitRepo, org, projectName} = flags;\n    const authToken = await checkToken(process.env.SUBQL_ACCESS_TOKEN, ACCESS_TOKEN_PATH);\n\n    org = await valueOrPrompt(org, 'Enter organisation', 'Organisation is required');\n    projectName = await valueOrPrompt(projectName, 'Enter project name', 'Project name is required');\n    gitRepo = await valueOrPrompt(gitRepo, 'Enter git repository', 'Git repository is required');\n\n    const result = await createProject(\n      org,\n      flags.subtitle,\n      flags.logoURL,\n      projectName,\n      authToken,\n      gitRepo,\n      flags.description,\n      flags.apiVersion,\n      flags.dedicatedDB,\n      ROOT_API_URL_PROD\n    ).catch((e) => this.error(e));\n\n    const [account, name] = result.key.split('/');\n    this.log(`Successfully created project: ${result.key}\n    \\nProject Url: ${BASE_PROJECT_URL}/orgs/${account}/projects/${name}/deployments`);\n  }\n}\n"]}