"use strict";
// Copyright 2020-2022 OnFinality Limited authors & contributors
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const path_1 = tslib_1.__importDefault(require("path"));
const core_1 = require("@oclif/core");
const constants_1 = require("../../constants");
const project_controller_1 = require("../../controller/project-controller");
const utils_1 = require("../../utils");
const ACCESS_TOKEN_PATH = path_1.default.resolve(process.env.HOME, '.subql/SUBQL_ACCESS_TOKEN');
class Create_project extends core_1.Command {
    async run() {
        const { flags } = await this.parse(Create_project);
        let { gitRepo, org, projectName } = flags;
        const authToken = await (0, utils_1.checkToken)(process.env.SUBQL_ACCESS_TOKEN, ACCESS_TOKEN_PATH);
        org = await (0, utils_1.valueOrPrompt)(org, 'Enter organisation', 'Organisation is required');
        projectName = await (0, utils_1.valueOrPrompt)(projectName, 'Enter project name', 'Project name is required');
        gitRepo = await (0, utils_1.valueOrPrompt)(gitRepo, 'Enter git repository', 'Git repository is required');
        const result = await (0, project_controller_1.createProject)(org, flags.subtitle, flags.logoURL, projectName, authToken, gitRepo, flags.description, flags.apiVersion, flags.dedicatedDB, constants_1.ROOT_API_URL_PROD).catch((e) => this.error(e));
        const [account, name] = result.key.split('/');
        this.log(`Successfully created project: ${result.key}
    \nProject Url: ${constants_1.BASE_PROJECT_URL}/orgs/${account}/projects/${name}/deployments`);
    }
}
exports.default = Create_project;
Create_project.description = 'Create Project on Hosted Service';
Create_project.flags = {
    org: core_1.Flags.string({ description: 'Enter organization name' }),
    projectName: core_1.Flags.string({ description: 'Enter project name' }),
    gitRepo: core_1.Flags.string({ description: 'Enter git repository' }),
    logoURL: core_1.Flags.string({ description: 'Enter logo URL', default: '', required: false }),
    subtitle: core_1.Flags.string({ description: 'Enter subtitle', default: '', required: false }),
    description: core_1.Flags.string({ description: 'Enter description', default: '', required: false }),
    apiVersion: core_1.Flags.string({ description: 'Enter api version', default: '2', required: false }),
    dedicatedDB: core_1.Flags.string({ description: 'Enter dedicated DataBase', required: false }),
};
//# sourceMappingURL=create-project.js.map