{"version":3,"file":"delete.js","sourceRoot":"","sources":["../../../src/commands/deployment/delete.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,wDAAwB;AACxB,sCAA2C;AAC3C,+CAAkD;AAClD,0EAAoE;AACpE,uCAAsD;AAEtD,MAAM,iBAAiB,GAAG,cAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;AAEtF,MAAqB,MAAO,SAAQ,cAAO;IASzC,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACzC,MAAM,SAAS,GAAG,MAAM,IAAA,kBAAU,EAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;QACtF,IAAI,YAAY,GAAW,CAAC,KAAK,CAAC,YAAY,CAAC;QAC/C,IAAI,YAAY,GAAW,KAAK,CAAC,YAAY,CAAC;QAC9C,IAAI,GAAG,GAAW,KAAK,CAAC,GAAG,CAAC;QAE5B,GAAG,GAAG,MAAM,IAAA,qBAAa,EAAC,GAAG,EAAE,oBAAoB,EAAE,0BAA0B,CAAC,CAAC;QACjF,YAAY,GAAG,MAAM,IAAA,qBAAa,EAAC,YAAY,EAAE,oBAAoB,EAAE,0BAA0B,CAAC,CAAC;QACnG,YAAY,GAAG,MAAM,IAAA,qBAAa,EAAC,YAAY,EAAE,qBAAqB,EAAE,2BAA2B,CAAC,CAAC;QAErG,IAAI,CAAC,GAAG,CAAC,wBAAwB,YAAY,EAAE,CAAC,CAAC;QACjD,MAAM,aAAa,GAAG,MAAM,IAAA,oCAAgB,EAAC,GAAG,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC,YAAY,EAAE,6BAAiB,CAAC,CAAC,KAAK,CAChH,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CACrB,CAAC;QACF,IAAI,CAAC,GAAG,CAAC,uBAAuB,aAAa,EAAE,CAAC,CAAC;IACnD,CAAC;;AAzBH,yBA0BC;AAzBQ,kBAAW,GAAG,mBAAmB,CAAC;AAElC,YAAK,GAAG;IACb,GAAG,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,yBAAyB,EAAC,CAAC;IAC3D,YAAY,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,oBAAoB,EAAC,CAAC;IAC/D,YAAY,EAAE,YAAK,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,qBAAqB,EAAC,CAAC;CACjE,CAAC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport path from 'path';\nimport {Command, Flags} from '@oclif/core';\nimport {ROOT_API_URL_PROD} from '../../constants';\nimport {deleteDeployment} from '../../controller/deploy-controller';\nimport {checkToken, valueOrPrompt} from '../../utils';\n\nconst ACCESS_TOKEN_PATH = path.resolve(process.env.HOME, '.subql/SUBQL_ACCESS_TOKEN');\n\nexport default class Delete extends Command {\n  static description = 'Delete Deployment';\n\n  static flags = {\n    org: Flags.string({description: 'Enter organization name'}),\n    project_name: Flags.string({description: 'Enter project name'}),\n    deploymentID: Flags.string({description: 'Enter deployment ID'}),\n  };\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(Delete);\n    const authToken = await checkToken(process.env.SUBQL_ACCESS_TOKEN, ACCESS_TOKEN_PATH);\n    let deploymentID: number = +flags.deploymentID;\n    let project_name: string = flags.project_name;\n    let org: string = flags.org;\n\n    org = await valueOrPrompt(org, 'Enter organisation', 'Organisation is required');\n    project_name = await valueOrPrompt(project_name, 'Enter project name', 'Project name is required');\n    deploymentID = await valueOrPrompt(deploymentID, 'Enter deployment ID', 'Deployment ID is required');\n\n    this.log(`Removing deployment: ${deploymentID}`);\n    const delete_output = await deleteDeployment(org, project_name, authToken, +deploymentID, ROOT_API_URL_PROD).catch(\n      (e) => this.error(e)\n    );\n    this.log(`Removed deployment: ${delete_output}`);\n  }\n}\n"]}