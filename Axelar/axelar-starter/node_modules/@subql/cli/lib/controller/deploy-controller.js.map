{"version":3,"file":"deploy-controller.js","sourceRoot":"","sources":["../../src/controller/deploy-controller.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport axios from 'axios';\nimport {DeploymentDataType, IndexerAdvancedOpts, ProjectDataType, QueryAdvancedOpts, ValidateDataType} from '../types';\nimport {buildProjectKey, errorHandle} from '../utils';\n\nexport async function deployToHostedService(\n  org: string,\n  projectName: string,\n  authToken: string,\n  ipfsCID: string,\n  indexerImageVersion: string,\n  queryImageVersion: string,\n  endpoint: string,\n  type: string,\n  dictEndpoint: string,\n  query: QueryAdvancedOpts,\n  indexer: IndexerAdvancedOpts,\n  url: string\n): Promise<DeploymentDataType> {\n  try {\n    const result = (\n      await axios({\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n        method: 'post',\n        url: `v2/subqueries/${buildProjectKey(org, projectName)}/deployments`,\n        baseURL: url,\n        data: {\n          version: ipfsCID,\n          dictEndpoint: dictEndpoint,\n          endpoint: endpoint,\n          advancedSettings: {\n            query: query,\n            indexer: indexer,\n          },\n          indexerImageVersion: indexerImageVersion,\n          queryImageVersion: queryImageVersion,\n          type: type,\n        },\n      })\n    ).data;\n    return result.deployment;\n  } catch (e) {\n    errorHandle(e, 'Error deploying to hosted service:');\n  }\n}\n\nexport async function promoteDeployment(\n  org: string,\n  projectName: string,\n  authToken: string,\n  deploymentId: number,\n  url: string\n): Promise<string> {\n  try {\n    await axios({\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n      },\n      method: 'post',\n      url: `subqueries/${buildProjectKey(org, projectName)}/deployments/${deploymentId}/release`,\n      baseURL: url,\n    });\n    return `${deploymentId}`;\n  } catch (e) {\n    errorHandle(e, 'Failed to promote project:');\n  }\n}\n\nexport async function deleteDeployment(\n  org: string,\n  projectName: string,\n  authToken: string,\n  deploymentId: number,\n  url: string\n): Promise<string> {\n  try {\n    await axios({\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n      },\n      method: 'delete',\n      url: `subqueries/${buildProjectKey(org, projectName)}/deployments/${deploymentId}`,\n      baseURL: url,\n    });\n    return `${deploymentId}`;\n  } catch (e) {\n    errorHandle(e, 'Failed to delete deployment:');\n  }\n}\n\nexport async function deploymentStatus(\n  org: string,\n  projectName: string,\n  authToken: string,\n  deployID: number,\n  url: string\n): Promise<string> {\n  try {\n    const result = (\n      await axios({\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n        method: 'get',\n        url: `subqueries/${buildProjectKey(org, projectName)}/deployments/${deployID}/status`,\n        baseURL: url,\n      })\n    ).data;\n    return `${result.status}`;\n  } catch (e) {\n    errorHandle(e, 'Failed to get deployment status:');\n  }\n}\n\nexport async function projectsInfo(\n  authToken: string,\n  org: string,\n  projectName: string,\n  url: string,\n  type: string\n): Promise<ProjectDataType> {\n  const key = `${org}/${projectName}`;\n  try {\n    const result = (\n      await axios({\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n        method: 'get',\n        url: `subqueries/${buildProjectKey(org, projectName)}/deployments`,\n        baseURL: url,\n      })\n    ).data;\n    return result.find((element: ProjectDataType) => element.projectKey === `${key}` && element.type === type);\n  } catch (e) {\n    errorHandle(e, 'Failed to get projects:');\n  }\n}\n\nexport async function redeploy(\n  org: string,\n  projectName: string,\n  deployID: number,\n  authToken: string,\n  ipfsCID: string,\n  endpoint: string,\n  dictEndpoint: string,\n  indexerVersion: string,\n  queryVersion: string,\n  query: QueryAdvancedOpts,\n  indexer: IndexerAdvancedOpts,\n  url: string\n): Promise<void> {\n  try {\n    await axios({\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n      },\n      method: 'put',\n      url: `v2/subqueries/${buildProjectKey(org, projectName)}/deployments/${deployID}`,\n      baseURL: url,\n      data: {\n        version: ipfsCID,\n        dictEndpoint: dictEndpoint,\n        endpoint: endpoint,\n        indexerImageVersion: indexerVersion,\n        queryImageVersion: queryVersion,\n        advancedSettings: {\n          query: query,\n          indexer: indexer,\n        },\n      },\n    });\n  } catch (e) {\n    errorHandle(e, `Failed to redeploy project: ${e.message}`);\n  }\n}\nexport async function ipfsCID_validate(cid: string, authToken: string, url: string): Promise<ValidateDataType> {\n  try {\n    const result = (\n      await axios({\n        headers: {\n          Authorization: `Bearer ${authToken}`,\n        },\n        method: 'post',\n        url: `ipfs/deployment-id/${cid}/validate`,\n        baseURL: url,\n      })\n    ).data;\n    return result;\n  } catch (e) {\n    errorHandle(e, 'Failed to validate IPFS CID:');\n  }\n}\n\nexport async function dictionaryEndpoints(url: string): Promise<EndpointType[]> {\n  try {\n    const result = (\n      await axios({\n        method: 'get',\n        url: `subqueries/dictionaries`,\n        baseURL: url,\n      })\n    ).data;\n    return result;\n  } catch (e) {\n    errorHandle(e, 'Failed to get dictionary endpoint:');\n  }\n}\n\nexport async function networkEndpoints(url: string): Promise<EndpointType[]> {\n  try {\n    const result = (\n      await axios({\n        method: 'get',\n        url: `subqueries/network-endpoints`,\n        baseURL: url,\n      })\n    ).data;\n    return result;\n  } catch (e) {\n    errorHandle(e, 'Failed to get endpoint:');\n  }\n}\n\nexport function processEndpoints(endpoints: EndpointType[], chainId: string): string | undefined {\n  return endpoints.find((endpoint: EndpointType) => endpoint.chainId === chainId)?.endpoint;\n}\n\nexport async function imageVersions(name: string, version: string, authToken: string, url: string): Promise<string[]> {\n  try {\n    const result = (\n      await axios({\n        headers: {Authorization: `Bearer ${authToken}`},\n        method: 'get',\n        url: `info/images/${encodeURIComponent(name)}?version=${encodeURIComponent(version)}`,\n        baseURL: url,\n      })\n    ).data;\n    return result;\n  } catch (e) {\n    errorHandle(e, 'Failed to get image:');\n  }\n}\ninterface EndpointType {\n  network: string;\n  endpoint: string;\n  chainId: string;\n}\n"]}