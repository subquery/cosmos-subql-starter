{"version":3,"file":"init-controller.spec.js","sourceRoot":"","sources":["../../src/controller/init-controller.spec.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,+CAAyB;AACzB,oDAAoB;AACpB,wDAAwB;AAExB,oEAA6B;AAC7B,uDAAkD;AAElD,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;IAC3B,MAAM,IAAI,GAAG;QACX,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE;KACjB,CAAC;IACF,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAEvB,KAAK,UAAU,WAAW;IACxB,MAAM,GAAG,GAAG,cAAI,CAAC,GAAG,CAAC;IACrB,MAAM,MAAM,GAAG,YAAE,CAAC,MAAM,EAAE,CAAC;IAC3B,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,MAAM,GAAG,GAAG,EAAE,CAAC,CAAC;IAC9D,OAAO,QAAQ,CAAC;AAClB,CAAC;AACD,MAAM,WAAW,GAAG;IAClB,IAAI,EAAE,gBAAgB;IACtB,UAAU,EAAE,EAAE;IACd,QAAQ,EAAE,iCAAiC;IAC3C,MAAM,EAAE,KAAK;IACb,WAAW,EAAE,kCAAkC;IAC/C,OAAO,EAAE,EAAE;IACX,OAAO,EAAE,EAAE;CACZ,CAAC;AAEF,QAAQ,CAAC,iCAAiC,EAAE,GAAG,EAAE;IAC/C,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,QAAQ,GAAG,MAAM,WAAW,EAAE,CAAC;QACpC,IAAA,oBAAG,GAAE,CAAC,KAAmB,CAAC,sBAAsB,CAAC,CAAC,EAAE,EAAE,EAAE;YACvD,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,IAAA,iCAAe,EAAC,QAAQ,EAAE,WAAW,CAAC,IAAI,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CACxG,2CAA2C,CAC5C,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport * as fs from 'fs';\nimport os from 'os';\nimport path from 'path';\nimport {NETWORK_FAMILY} from '@subql/common';\nimport git from 'simple-git';\nimport {cloneProjectGit} from './init-controller';\n\njest.mock('simple-git', () => {\n  const mGit = {\n    clone: jest.fn(),\n  };\n  return jest.fn(() => mGit);\n});\n\njest.setTimeout(30000);\n\nasync function makeTempDir() {\n  const sep = path.sep;\n  const tmpDir = os.tmpdir();\n  const tempPath = await fs.promises.mkdtemp(`${tmpDir}${sep}`);\n  return tempPath;\n}\nconst projectSpec = {\n  name: 'mocked_starter',\n  repository: '',\n  endpoint: 'wss://rpc.polkadot.io/public-ws',\n  author: 'jay',\n  description: 'this is test for init controller',\n  version: '',\n  license: '',\n};\n\ndescribe('Cli can create project (mocked)', () => {\n  it('throw error when git clone failed', async () => {\n    const tempPath = await makeTempDir();\n    (git().clone as jest.Mock).mockImplementationOnce((cb) => {\n      cb(new Error());\n    });\n    await expect(cloneProjectGit(tempPath, projectSpec.name, 'invalid_url', 'invalid_branch')).rejects.toThrow(\n      /Failed to clone starter template from git/\n    );\n  });\n});\n"]}