{"version":3,"file":"project-controller.spec.js","sourceRoot":"","sources":["../../src/controller/project-controller.spec.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;AAEtC,4CAA8C;AAC9C,oCAA+B;AAC/B,6DAAkE;AAElE,MAAM,WAAW,GAAG;IAClB,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc;IAC/B,WAAW,EAAE,gBAAgB;IAC7B,UAAU,EAAE,4CAA4C;IACxD,IAAI,EAAE,gDAAgD;IACtD,QAAQ,EAAE,EAAE;IACZ,WAAW,EAAE,EAAE;IACf,OAAO,EAAE,EAAE;IACX,UAAU,EAAE,GAAG;CAChB,CAAC;AAEF,qDAAqD;AACrD,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC;AAErD,MAAM,MAAM,GAAG,CAAC,SAAkB,EAAE,GAAG,IAA2B,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AAEpH,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AACxB,QAAQ,CAAC,uCAAuC,EAAE,GAAG,EAAE;IACrD,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE,2BAA2B,EAAE,KAAK,IAAI,EAAE;QACzD,MAAM,EAAC,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAC,GAAG,WAAW,CAAC;QAC/F,MAAM,cAAc,GAAG,MAAM,IAAA,kCAAa,EACxC,GAAG,EACH,QAAQ,EACR,OAAO,EACP,WAAW,EACX,QAAQ,EACR,UAAU,EACV,WAAW,EACX,UAAU,EACV,SAAS,EACT,4BAAgB,CACjB,CAAC;QACF,MAAM,IAAA,aAAK,EAAC,EAAE,CAAC,CAAC;QAChB,MAAM,cAAc,GAAG,MAAM,IAAA,kCAAa,EAAC,QAAQ,EAAE,GAAG,EAAE,WAAW,EAAE,4BAAgB,CAAC,CAAC;QACzF,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,iBAAiB,CAAC,CAAC;QACnF,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,iBAAiB,CAAC,CAAC;IACjF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {ROOT_API_URL_DEV} from '../constants';\nimport {delay} from '../utils';\nimport {createProject, deleteProject} from './project-controller';\n\nconst projectSpec = {\n  org: process.env.SUBQL_ORG_TEST,\n  projectName: 'mocked_project',\n  repository: 'https://github.com/bz888/test-deployment-2',\n  ipfs: 'QmaVh8DGzuRCJZ5zYEDxXQsXYqP9HihjjeuxNNteSDq8xX',\n  subtitle: '',\n  description: '',\n  logoURl: '',\n  apiVersion: '2',\n};\n\n// Replace/Update your access token when test locally\nconst testAuth = process.env.SUBQL_ACCESS_TOKEN_TEST;\n\nconst testIf = (condition: boolean, ...args: Parameters<typeof it>) => (condition ? it(...args) : it.skip(...args));\n\njest.setTimeout(120000);\ndescribe('CLI create project and delete project', () => {\n  testIf(!!testAuth, 'Create project and delete', async () => {\n    const {apiVersion, description, logoURl, org, projectName, repository, subtitle} = projectSpec;\n    const create_project = await createProject(\n      org,\n      subtitle,\n      logoURl,\n      projectName,\n      testAuth,\n      repository,\n      description,\n      apiVersion,\n      undefined,\n      ROOT_API_URL_DEV\n    );\n    await delay(10);\n    const delete_project = await deleteProject(testAuth, org, projectName, ROOT_API_URL_DEV);\n    expect(create_project.key).toMatch(`${process.env.SUBQL_ORG_TEST}/mocked_project`);\n    expect(delete_project).toMatch(`${process.env.SUBQL_ORG_TEST}/mocked_project`);\n  });\n});\n"]}