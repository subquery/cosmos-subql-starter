{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AA4CtC,SAAgB,mBAAmB,CAAC,WAA4B;IAC9D,OAAO,CAAC,CAAC,mBAAmB,CAAC,WAAW,CAAC,IAAI,wBAAwB,CAAC,WAAW,CAAC,CAAC,CAAC;AACtF,CAAC;AAFD,kDAEC;AAED,SAAgB,mBAAmB,CAAC,WAA4B;IAC9D,OAAO,CAAC,CAAE,WAAiC,CAAC,WAAW,CAAC;AAC1D,CAAC;AAFD,kDAEC;AAED,SAAgB,mBAAmB,CAAC,WAA4B;IAC9D,OAAO,CAAC,CAAE,WAAiC,CAAC,OAAO,CAAC;AACtD,CAAC;AAFD,kDAEC;AAED,SAAgB,wBAAwB,CAAC,WAA4B;IACnE,OAAO,CAAC,CAAE,WAAsC,CAAC,OAAO,CAAC;AAC3D,CAAC;AAFD,4DAEC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {RunnerSpecs} from '@subql/common';\n\nexport interface ProjectSpecBase {\n  name: string;\n  repository?: string;\n  author: string;\n  description?: string;\n  version: string;\n  license: string;\n  endpoint: string;\n}\n\nexport interface QueryAdvancedOpts {\n  unsafe?: boolean | undefined;\n  subscription?: boolean | undefined;\n  queryTimeout?: number | undefined;\n  maxConnection?: number | undefined;\n  Aggregate?: boolean | undefined;\n}\nexport interface IndexerAdvancedOpts {\n  unsafe?: boolean | undefined;\n  batchSize?: number | undefined;\n  subscription?: boolean | undefined;\n  historicalData?: boolean | undefined;\n  workers?: number | undefined;\n}\n\nexport type ProjectSpecV0_0_1 = ProjectSpecBase;\n\nexport interface ProjectSpecV1_0_0 extends ProjectSpecBase {\n  chainId: string;\n  runner: RunnerSpecs;\n}\n\nexport interface ProjectSpecV0_2_0 extends ProjectSpecBase {\n  genesisHash: string;\n}\n\nexport interface TerraProjectSpecV0_3_0 extends ProjectSpecBase {\n  chainId: string;\n}\n\nexport function isProjectSpecV0_0_1(projectSpec: ProjectSpecBase): projectSpec is ProjectSpecV0_0_1 {\n  return !(isProjectSpecV0_2_0(projectSpec) || isTerraProjectSpecV0_3_0(projectSpec));\n}\n\nexport function isProjectSpecV0_2_0(projectSpec: ProjectSpecBase): projectSpec is ProjectSpecV0_2_0 {\n  return !!(projectSpec as ProjectSpecV0_2_0).genesisHash;\n}\n\nexport function isProjectSpecV1_0_0(projectSpec: ProjectSpecBase): projectSpec is ProjectSpecV1_0_0 {\n  return !!(projectSpec as ProjectSpecV1_0_0).chainId;\n}\n\nexport function isTerraProjectSpecV0_3_0(projectSpec: ProjectSpecBase): projectSpec is TerraProjectSpecV0_3_0 {\n  return !!(projectSpec as TerraProjectSpecV0_3_0).chainId;\n}\n\nexport interface ValidateDataType {\n  valid: boolean;\n  manifestFile: string | null;\n  chainId: string | null;\n  runner?: RunnerSpecs | null;\n  manifestRunner?: RunnerSpecs | null;\n  errorMessage?: string;\n}\n\nexport interface DeploymentSpec {\n  org: string;\n  projectName: string;\n  repository: string;\n  ipfs: string;\n  subtitle: string;\n  description: string;\n  logoURl: string;\n  apiVersion: string;\n  type: string;\n}\nexport interface DeploymentDataType {\n  projectKey: string;\n  version: string;\n  status: string;\n  indexerImage: string;\n  queryImage: string;\n  endpoint: string;\n  dictEndpoint: string;\n  type: string;\n  createdAt: string;\n  updatedAt: string;\n  id: number;\n  subFolder: string;\n  queryUrl: string;\n  configuration: {\n    config: {\n      query: Record<string, unknown>;\n      indexer: {\n        batchSize: number;\n      };\n      role: string;\n      chainId: string;\n    };\n  };\n}\n\nexport interface ProjectDataType {\n  createdAt: string;\n  updatedAt: string;\n  id: number;\n  projectKey: string;\n  version: string;\n  status: string;\n  cluster: string;\n  indexerImage: string;\n  queryImage: string;\n  subFolder: string;\n  endpoint: string;\n  dictEndpoint: string;\n  type: string;\n  queryUrl: string;\n  configuration: {\n    config: {\n      query: {};\n      indexer: {};\n    };\n  };\n  role: string;\n  chainId: string;\n  apiVersion: string;\n}\n"]}