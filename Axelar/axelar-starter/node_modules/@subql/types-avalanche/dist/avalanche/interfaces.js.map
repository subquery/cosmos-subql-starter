{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../src/avalanche/interfaces.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {BlockWrapper} from '../interfaces';\n\nexport interface AvalancheBlockFilter {\n  modulo?: number;\n  timestamp?: string;\n}\n\nexport interface AvalancheTransactionFilter {\n  from?: string;\n  to?: string;\n  function?: string;\n}\n\nexport interface AvalancheLogFilter {\n  topics?: Array<string | null | undefined>;\n  address?: string;\n}\n\nexport interface AvalancheResult extends ReadonlyArray<any> {\n  readonly [key: string]: any;\n}\n\nexport type AvalancheBlock = {\n  blockExtraData: string;\n  difficulty: bigint;\n  extDataGasUsed: string;\n  extDataHash: string;\n  gasLimit: bigint;\n  gasUsed: bigint;\n  hash: string;\n  logs: AvalancheLog[];\n  logsBloom: string;\n  miner: string;\n  mixHash: string;\n  nonce: string;\n  number: number;\n  parentHash: string;\n  receiptsRoot: string;\n  sha3Uncles: string;\n  size: bigint;\n  stateRoot: string;\n  timestamp: bigint;\n  totalDifficulty: bigint;\n  transactions: AvalancheTransaction[];\n  transactionsRoot: string;\n  uncles: string[];\n  baseFeePerGas?: bigint;\n  blockGasCost?: bigint;\n};\n\nexport type AvalancheTransaction<T extends AvalancheResult = AvalancheResult> = {\n  blockHash: string;\n  blockNumber: number;\n  from: string;\n  gas: bigint;\n  gasPrice: bigint;\n  hash: string;\n  input: string;\n  nonce: bigint;\n  to: string;\n  transactionIndex: bigint;\n  value: bigint;\n  type: string;\n  v: bigint;\n  r: string;\n  s: string;\n  receipt: AvalancheReceipt;\n  accessList?: string[];\n  chainId?: string;\n  maxFeePerGas?: bigint;\n  maxPriorityFeePerGas?: bigint;\n  args?: T;\n};\n\nexport type AvalancheLog<T extends AvalancheResult = AvalancheResult> = {\n  address: string;\n  topics: string[];\n  data: string;\n  blockHash: string;\n  blockNumber: number;\n  transactionHash: string;\n  transactionIndex: number;\n  logIndex: number;\n  removed: boolean;\n  args?: T;\n  block: AvalancheBlock;\n};\n\nexport type AvalancheReceipt = {\n  blockHash: string;\n  blockNumber: number;\n  contractAddress: string;\n  cumulativeGasUsed: bigint;\n  effectiveGasPrice: bigint;\n  from: string;\n  gasUsed: bigint;\n  logs: AvalancheLog[];\n  logsBloom: string;\n  status: boolean;\n  to: string;\n  transactionHash: string;\n  transactionIndex: number;\n  type: string;\n};\n\nexport type AvalancheBlockWrapper = BlockWrapper<\n  AvalancheBlock,\n  AvalancheTransaction,\n  AvalancheLog,\n  AvalancheTransactionFilter,\n  AvalancheLogFilter\n>;\n"]}