{"version":3,"file":"project.js","sourceRoot":"","sources":["../src/project.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAmBtC,IAAY,yBAGX;AAHD,WAAY,yBAAyB;IACnC,uDAA0B,CAAA;IAC1B,qDAAwB,CAAA;AAC1B,CAAC,EAHW,yBAAyB,GAAzB,iCAAyB,KAAzB,iCAAyB,QAGpC;AAED,IAAY,sBAKX;AALD,WAAY,sBAAsB;IAChC,uDAA6B,CAAA;IAC7B,mEAAyC,CAAA;IACzC,2DAAiC,CAAA;IACjC,uDAA6B,CAAA;AAC/B,CAAC,EALW,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QAKjC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {CosmWasmClient} from '@cosmjs/cosmwasm-stargate';\nimport {Registry} from '@cosmjs/proto-signing';\nimport {CosmosBlock, CosmosTransaction, CosmosMessage, CosmosEvent} from './interfaces';\n\nexport interface FileReference {\n  file: string;\n}\n\nexport interface CustomModule {\n  file: string;\n  messages: string[];\n}\n\nexport type CustomDataSourceAsset = FileReference;\n\nexport type Processor<O = any> = FileReference & {options?: O};\n\nexport enum SubqlCosmosDatasourceKind {\n  Runtime = 'cosmos/Runtime',\n  Custom = 'cosmos/Custom',\n}\n\nexport enum SubqlCosmosHandlerKind {\n  Block = 'cosmos/BlockHandler',\n  Transaction = 'cosmos/TransactionHandler',\n  Message = 'cosmos/MessageHandler',\n  Event = 'cosmos/EventHandler',\n}\n\nexport type CosmosRuntimeHandlerInputMap = {\n  [SubqlCosmosHandlerKind.Block]: CosmosBlock;\n  [SubqlCosmosHandlerKind.Transaction]: CosmosTransaction;\n  [SubqlCosmosHandlerKind.Message]: CosmosMessage;\n  [SubqlCosmosHandlerKind.Event]: CosmosEvent;\n};\n\ntype CosmosRuntimeFilterMap = {\n  [SubqlCosmosHandlerKind.Block]: {};\n  [SubqlCosmosHandlerKind.Transaction]: {};\n  [SubqlCosmosHandlerKind.Message]: SubqlCosmosMessageFilter;\n  [SubqlCosmosHandlerKind.Event]: SubqlCosmosEventFilter;\n};\n\nexport interface CosmosProjectManifest {\n  specVersion: string;\n  description: string;\n  repository: string;\n\n  schema: {\n    file: string;\n  };\n\n  network: CosmosNetwork;\n\n  dataSources: SubqlCosmosDatasource[];\n}\n\nexport interface CosmosNetwork {\n  genesisHash: string;\n  endpoint: string;\n  chainId: string;\n  chainTypes?: Map<string, CustomModule>;\n}\n\nexport interface SubqlCosmosBlockFilter {\n  modulo?: number;\n  timestamp?: string;\n}\n\nexport interface SubqlCosmosTxFilter {\n  includeFailedTx?: boolean;\n}\n\nexport interface SubqlCosmosMessageFilter extends SubqlCosmosTxFilter {\n  type: string;\n  contractCall?: string;\n  values?: {\n    [key: string]: string;\n  };\n}\n\nexport interface SubqlCosmosEventFilter {\n  type: string;\n  messageFilter?: SubqlCosmosMessageFilter;\n  attributes?: Record<string, string | number>;\n}\n\nexport type SubqlCosmosHandlerFilter = SubqlCosmosEventFilter | SubqlCosmosMessageFilter;\n\nexport interface SubqlCosmosBlockHandler {\n  handler: string;\n  kind: SubqlCosmosHandlerKind.Block;\n  filter?: SubqlCosmosBlockFilter;\n}\n\nexport interface SubqlCosmosTransactionHandler {\n  handler: string;\n  kind: SubqlCosmosHandlerKind.Transaction;\n  filter?: undefined;\n}\n\nexport interface SubqlCosmosMessageHandler {\n  handler: string;\n  kind: SubqlCosmosHandlerKind.Message;\n  filter?: SubqlCosmosMessageFilter;\n}\n\nexport interface SubqlCosmosEventHandler {\n  handler: string;\n  kind: SubqlCosmosHandlerKind.Event;\n  filter?: SubqlCosmosEventFilter;\n}\n\nexport interface SubqlCosmosCustomHandler<K extends string = string, F = Record<string, unknown>> {\n  handler: string;\n  kind: K;\n  filter?: F;\n}\n\nexport type SubqlCosmosRuntimeHandler =\n  | SubqlCosmosBlockHandler\n  | SubqlCosmosTransactionHandler\n  | SubqlCosmosMessageHandler\n  | SubqlCosmosEventHandler;\n\nexport type SubqlCosmosHandler = SubqlCosmosRuntimeHandler | SubqlCosmosCustomHandler;\n\nexport interface SubqlCosmosMapping<T extends SubqlCosmosHandler = SubqlCosmosHandler> {\n  file: string;\n  handlers: T[];\n}\n\ninterface ISubqlCosmosDatasource<M extends SubqlCosmosMapping> {\n  name?: string;\n  kind: string;\n  startBlock?: number;\n  mapping: M;\n}\n\nexport interface SubqlCosmosRuntimeDatasource<\n  M extends SubqlCosmosMapping<SubqlCosmosRuntimeHandler> = SubqlCosmosMapping<SubqlCosmosRuntimeHandler>\n> extends ISubqlCosmosDatasource<M> {\n  kind: SubqlCosmosDatasourceKind.Runtime;\n}\n\nexport type SubqlCosmosDatasource = SubqlCosmosRuntimeDatasource | SubqlCosmosCustomDatasource;\n\nexport type CustomCosmosDataSourceAsset = FileReference;\n\nexport interface SubqlCosmosCustomDatasource<\n  K extends string = string,\n  M extends SubqlCosmosMapping = SubqlCosmosMapping<SubqlCosmosCustomHandler>,\n  O = any\n> extends ISubqlCosmosDatasource<M> {\n  kind: K;\n  assets: Map<string, CustomCosmosDataSourceAsset>;\n  processor?: Processor<O>;\n}\n\nexport interface HandlerInputTransformer_0_0_0<\n  T extends SubqlCosmosHandlerKind,\n  E,\n  DS extends SubqlCosmosCustomDatasource = SubqlCosmosCustomDatasource\n> {\n  (input: CosmosRuntimeHandlerInputMap[T], ds: DS, api: CosmWasmClient, assets?: Record<string, string>): Promise<E>; //  | SubstrateBuiltinDataSource\n}\n\nexport interface HandlerInputTransformer_1_0_0<\n  T extends SubqlCosmosHandlerKind,\n  F,\n  E,\n  DS extends SubqlCosmosCustomDatasource = SubqlCosmosCustomDatasource\n> {\n  (params: {\n    input: CosmosRuntimeHandlerInputMap[T];\n    ds: DS;\n    filter?: F;\n    api: CosmWasmClient;\n    assets?: Record<string, string>;\n  }): Promise<E[]>; //  | SubstrateBuiltinDataSource\n}\n\nexport type SecondLayerHandlerProcessorArray<\n  K extends string,\n  F,\n  T,\n  DS extends SubqlCosmosCustomDatasource<K> = SubqlCosmosCustomDatasource<K>\n> =\n  | SecondLayerHandlerProcessor<SubqlCosmosHandlerKind.Block, F, T, DS>\n  | SecondLayerHandlerProcessor<SubqlCosmosHandlerKind.Transaction, F, T, DS>\n  | SecondLayerHandlerProcessor<SubqlCosmosHandlerKind.Message, F, T, DS>\n  | SecondLayerHandlerProcessor<SubqlCosmosHandlerKind.Event, F, T, DS>;\n\nexport interface SubqlCosmosDatasourceProcessor<\n  K extends string,\n  F,\n  DS extends SubqlCosmosCustomDatasource<K> = SubqlCosmosCustomDatasource<K>,\n  P extends Record<string, SecondLayerHandlerProcessorArray<K, F, any, DS>> = Record<\n    string,\n    SecondLayerHandlerProcessorArray<K, F, any, DS>\n  >\n> {\n  kind: K;\n  validate(ds: DS, assets: Record<string, string>): void;\n  dsFilterProcessor(ds: DS, api: CosmWasmClient): boolean;\n  handlerProcessors: P;\n}\n\nexport interface DictionaryQueryCondition {\n  field: string;\n  value: string | Record<string, string> | Array<Record<string, string>>;\n  matcher?: string; // defaults to \"equalTo\", use \"contains\" for JSON\n}\n\nexport interface DictionaryQueryEntry {\n  entity: string;\n  conditions: DictionaryQueryCondition[];\n}\n\ninterface SecondLayerHandlerProcessorBase<\n  K extends SubqlCosmosHandlerKind,\n  F,\n  DS extends SubqlCosmosCustomDatasource = SubqlCosmosCustomDatasource\n> {\n  baseHandlerKind: K;\n  baseFilter: CosmosRuntimeFilterMap[K] | CosmosRuntimeFilterMap[K][];\n  filterValidator: (filter?: F) => void;\n  dictionaryQuery?: (filter: F, ds: DS) => DictionaryQueryEntry | undefined;\n}\n\nexport interface SecondLayerHandlerProcessor_0_0_0<\n  K extends SubqlCosmosHandlerKind,\n  F,\n  E,\n  DS extends SubqlCosmosCustomDatasource = SubqlCosmosCustomDatasource\n> extends SecondLayerHandlerProcessorBase<K, F, DS> {\n  specVersion: undefined;\n  transformer: HandlerInputTransformer_0_0_0<K, E, DS>;\n  filterProcessor: (filter: F | undefined, input: CosmosRuntimeHandlerInputMap[K], ds: DS) => boolean;\n}\n\nexport interface SecondLayerHandlerProcessor_1_0_0<\n  K extends SubqlCosmosHandlerKind,\n  F,\n  E,\n  DS extends SubqlCosmosCustomDatasource = SubqlCosmosCustomDatasource\n> extends SecondLayerHandlerProcessorBase<K, F, DS> {\n  specVersion: '1.0.0';\n  transformer: HandlerInputTransformer_1_0_0<K, F, E, DS>;\n  filterProcessor: (params: {\n    filter: F | undefined;\n    input: CosmosRuntimeHandlerInputMap[K];\n    ds: DS;\n    registry: Registry;\n  }) => boolean;\n}\n\nexport type SecondLayerHandlerProcessor<\n  K extends SubqlCosmosHandlerKind,\n  F,\n  E,\n  DS extends SubqlCosmosCustomDatasource = SubqlCosmosCustomDatasource\n> = SecondLayerHandlerProcessor_0_0_0<K, F, E, DS> | SecondLayerHandlerProcessor_1_0_0<K, F, E, DS>;\n"]}