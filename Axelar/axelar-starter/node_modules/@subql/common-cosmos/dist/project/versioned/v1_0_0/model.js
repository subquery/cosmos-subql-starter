"use strict";
// Copyright 2020-2022 OnFinality Limited authors & contributors
// SPDX-License-Identifier: Apache-2.0
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectManifestV1_0_0Impl = exports.DeploymentV1_0_0 = exports.CosmosRunnerSpecsImpl = exports.CosmosRunnerNodeImpl = exports.CustomDatasourceTemplateImpl = exports.RuntimeDatasourceTemplateImpl = void 0;
const common_1 = require("@subql/common");
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
const v0_3_0_1 = require("../v0_3_0");
const COSMOS_NODE_NAME = `@subql/node-cosmos`;
class RuntimeDatasourceTemplateImpl extends v0_3_0_1.CosmosRuntimeDataSourceV0_3_0Impl {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RuntimeDatasourceTemplateImpl.prototype, "name", void 0);
exports.RuntimeDatasourceTemplateImpl = RuntimeDatasourceTemplateImpl;
class CustomDatasourceTemplateImpl extends v0_3_0_1.CosmosCustomDataSourceV0_3_0Impl {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomDatasourceTemplateImpl.prototype, "name", void 0);
exports.CustomDatasourceTemplateImpl = CustomDatasourceTemplateImpl;
class CosmosRunnerNodeImpl {
}
__decorate([
    (0, class_validator_1.Equals)(COSMOS_NODE_NAME, { message: `Runner Cosmos node name incorrect, suppose be '${COSMOS_NODE_NAME}'` }),
    __metadata("design:type", String)
], CosmosRunnerNodeImpl.prototype, "name", void 0);
__decorate([
    (0, class_validator_1.Validate)(common_1.SemverVersionValidator)
    // @Matches(RUNNER_REGEX)
    ,
    __metadata("design:type", String)
], CosmosRunnerNodeImpl.prototype, "version", void 0);
exports.CosmosRunnerNodeImpl = CosmosRunnerNodeImpl;
class CosmosRunnerSpecsImpl {
}
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CosmosRunnerNodeImpl),
    __metadata("design:type", Object)
], CosmosRunnerSpecsImpl.prototype, "node", void 0);
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => common_1.RunnerQueryBaseModel),
    __metadata("design:type", Object)
], CosmosRunnerSpecsImpl.prototype, "query", void 0);
exports.CosmosRunnerSpecsImpl = CosmosRunnerSpecsImpl;
class DeploymentV1_0_0 extends v0_3_0_1.DeploymentV0_3_0 {
}
__decorate([
    (0, class_validator_1.Equals)('1.0.0'),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], DeploymentV1_0_0.prototype, "specVersion", void 0);
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CosmosRunnerSpecsImpl),
    __metadata("design:type", Object)
], DeploymentV1_0_0.prototype, "runner", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CustomDatasourceTemplateImpl, {
        discriminator: {
            property: 'kind',
            subTypes: [{ value: RuntimeDatasourceTemplateImpl, name: 'cosmos/Runtime' }],
        },
        keepDiscriminatorProperty: true,
    }),
    __metadata("design:type", Array)
], DeploymentV1_0_0.prototype, "templates", void 0);
exports.DeploymentV1_0_0 = DeploymentV1_0_0;
class ProjectManifestV1_0_0Impl extends v0_3_0_1.ProjectManifestV0_3_0Impl {
    get deployment() {
        if (!this._deployment) {
            this._deployment = (0, class_transformer_1.plainToClass)(DeploymentV1_0_0, this);
            (0, class_validator_1.validateSync)(this._deployment, { whitelist: true });
        }
        return this._deployment;
    }
}
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CustomDatasourceTemplateImpl, {
        discriminator: {
            property: 'kind',
            subTypes: [{ value: RuntimeDatasourceTemplateImpl, name: 'cosmos/Runtime' }],
        },
        keepDiscriminatorProperty: true,
    }),
    __metadata("design:type", Array)
], ProjectManifestV1_0_0Impl.prototype, "templates", void 0);
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CosmosRunnerSpecsImpl),
    __metadata("design:type", Object)
], ProjectManifestV1_0_0Impl.prototype, "runner", void 0);
exports.ProjectManifestV1_0_0Impl = ProjectManifestV1_0_0Impl;
//# sourceMappingURL=model.js.map