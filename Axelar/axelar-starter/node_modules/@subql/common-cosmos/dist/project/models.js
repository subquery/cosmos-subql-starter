"use strict";
// Copyright 2020-2022 OnFinality Limited authors & contributors
// SPDX-License-Identifier: Apache-2.0
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CosmosCustomDataSourceBase = exports.CosmosCustomModuleImpl = exports.CosmosFileReferenceImpl = exports.CosmosRuntimeDataSourceBase = exports.CosmosCustomMapping = exports.CosmosMapping = exports.CosmosCustomHandler = exports.CosmosEventHandler = exports.CosmosMessageHandler = exports.CosmosTransactionHandler = exports.CosmosBlockHandler = exports.CosmosEventFilter = exports.CosmosMessageFilter = exports.CosmosTxFilter = exports.CosmosBlockFilter = void 0;
const types_cosmos_1 = require("@subql/types-cosmos");
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
class CosmosBlockFilter {
}
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], CosmosBlockFilter.prototype, "modulo", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosBlockFilter.prototype, "timestamp", void 0);
exports.CosmosBlockFilter = CosmosBlockFilter;
class CosmosTxFilter {
}
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], CosmosTxFilter.prototype, "includeFailedTx", void 0);
exports.CosmosTxFilter = CosmosTxFilter;
class CosmosMessageFilter extends CosmosTxFilter {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosMessageFilter.prototype, "type", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsObject)(),
    __metadata("design:type", Object)
], CosmosMessageFilter.prototype, "values", void 0);
__decorate([
    (0, class_validator_1.ValidateIf)((o) => o.type === '/cosmwasm.wasm.v1.MsgExecuteContract'),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosMessageFilter.prototype, "contractCall", void 0);
exports.CosmosMessageFilter = CosmosMessageFilter;
class CosmosEventFilter {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosEventFilter.prototype, "type", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_transformer_1.Type)(() => CosmosMessageFilter),
    __metadata("design:type", Object)
], CosmosEventFilter.prototype, "messageFilter", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsObject)(),
    __metadata("design:type", Object)
], CosmosEventFilter.prototype, "attributes", void 0);
exports.CosmosEventFilter = CosmosEventFilter;
class CosmosBlockHandler {
}
__decorate([
    (0, class_validator_1.IsEnum)(types_cosmos_1.SubqlCosmosHandlerKind, { groups: [types_cosmos_1.SubqlCosmosHandlerKind.Block] }),
    __metadata("design:type", String)
], CosmosBlockHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosBlockHandler.prototype, "handler", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_transformer_1.Type)(() => CosmosBlockFilter),
    __metadata("design:type", Object)
], CosmosBlockHandler.prototype, "filter", void 0);
exports.CosmosBlockHandler = CosmosBlockHandler;
class CosmosTransactionHandler {
}
__decorate([
    (0, class_validator_1.IsEnum)(types_cosmos_1.SubqlCosmosHandlerKind, { groups: [types_cosmos_1.SubqlCosmosHandlerKind.Transaction] }),
    __metadata("design:type", String)
], CosmosTransactionHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosTransactionHandler.prototype, "handler", void 0);
exports.CosmosTransactionHandler = CosmosTransactionHandler;
class CosmosMessageHandler {
}
__decorate([
    (0, class_validator_1.IsEnum)(types_cosmos_1.SubqlCosmosHandlerKind, { groups: [types_cosmos_1.SubqlCosmosHandlerKind.Message] }),
    __metadata("design:type", String)
], CosmosMessageHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosMessageHandler.prototype, "handler", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CosmosMessageFilter),
    __metadata("design:type", CosmosMessageFilter)
], CosmosMessageHandler.prototype, "filter", void 0);
exports.CosmosMessageHandler = CosmosMessageHandler;
class CosmosEventHandler {
}
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CosmosEventFilter),
    __metadata("design:type", Object)
], CosmosEventHandler.prototype, "filter", void 0);
__decorate([
    (0, class_validator_1.IsEnum)(types_cosmos_1.SubqlCosmosHandlerKind, { groups: [types_cosmos_1.SubqlCosmosHandlerKind.Event] }),
    __metadata("design:type", String)
], CosmosEventHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosEventHandler.prototype, "handler", void 0);
exports.CosmosEventHandler = CosmosEventHandler;
class CosmosCustomHandler {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosCustomHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosCustomHandler.prototype, "handler", void 0);
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], CosmosCustomHandler.prototype, "filter", void 0);
exports.CosmosCustomHandler = CosmosCustomHandler;
class CosmosMapping {
}
__decorate([
    (0, class_transformer_1.Transform)((params) => {
        const handlers = params.value;
        return handlers.map((handler) => {
            switch (handler.kind) {
                case types_cosmos_1.SubqlCosmosHandlerKind.Event:
                    return (0, class_transformer_1.plainToClass)(CosmosEventHandler, handler);
                case types_cosmos_1.SubqlCosmosHandlerKind.Message:
                    return (0, class_transformer_1.plainToClass)(CosmosMessageHandler, handler);
                case types_cosmos_1.SubqlCosmosHandlerKind.Transaction:
                    return (0, class_transformer_1.plainToClass)(CosmosTransactionHandler, handler);
                case types_cosmos_1.SubqlCosmosHandlerKind.Block:
                    return (0, class_transformer_1.plainToClass)(CosmosBlockHandler, handler);
                default:
                    throw new Error(`handler ${handler.kind} not supported`);
            }
        });
    }),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", Array)
], CosmosMapping.prototype, "handlers", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosMapping.prototype, "file", void 0);
exports.CosmosMapping = CosmosMapping;
class CosmosCustomMapping {
}
__decorate([
    (0, class_validator_1.IsArray)(),
    (0, class_transformer_1.Type)(() => CosmosCustomHandler),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", Array)
], CosmosCustomMapping.prototype, "handlers", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosCustomMapping.prototype, "file", void 0);
exports.CosmosCustomMapping = CosmosCustomMapping;
class CosmosRuntimeDataSourceBase {
}
__decorate([
    (0, class_validator_1.IsEnum)(types_cosmos_1.SubqlCosmosDatasourceKind, { groups: [types_cosmos_1.SubqlCosmosDatasourceKind.Runtime] }),
    __metadata("design:type", String)
], CosmosRuntimeDataSourceBase.prototype, "kind", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => CosmosMapping),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", Object)
], CosmosRuntimeDataSourceBase.prototype, "mapping", void 0);
__decorate([
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], CosmosRuntimeDataSourceBase.prototype, "startBlock", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => CosmosCustomModuleImpl),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Map)
], CosmosRuntimeDataSourceBase.prototype, "chainTypes", void 0);
exports.CosmosRuntimeDataSourceBase = CosmosRuntimeDataSourceBase;
class CosmosFileReferenceImpl {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosFileReferenceImpl.prototype, "file", void 0);
exports.CosmosFileReferenceImpl = CosmosFileReferenceImpl;
class CosmosCustomModuleImpl {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosCustomModuleImpl.prototype, "file", void 0);
__decorate([
    (0, class_validator_1.IsArray)(),
    (0, class_transformer_1.Type)(() => String),
    __metadata("design:type", Array)
], CosmosCustomModuleImpl.prototype, "messages", void 0);
exports.CosmosCustomModuleImpl = CosmosCustomModuleImpl;
class CosmosCustomDataSourceBase {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosCustomDataSourceBase.prototype, "kind", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => CosmosCustomMapping),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", Object)
], CosmosCustomDataSourceBase.prototype, "mapping", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], CosmosCustomDataSourceBase.prototype, "startBlock", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => CosmosFileReferenceImpl),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Map)
], CosmosCustomDataSourceBase.prototype, "assets", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => CosmosFileReferenceImpl),
    (0, class_validator_1.IsObject)(),
    __metadata("design:type", Object)
], CosmosCustomDataSourceBase.prototype, "processor", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => CosmosCustomModuleImpl),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Map)
], CosmosCustomDataSourceBase.prototype, "chainTypes", void 0);
exports.CosmosCustomDataSourceBase = CosmosCustomDataSourceBase;
//# sourceMappingURL=models.js.map