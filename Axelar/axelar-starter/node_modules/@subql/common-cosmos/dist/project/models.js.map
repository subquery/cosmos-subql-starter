{"version":3,"file":"models.js","sourceRoot":"","sources":["../../src/project/models.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;;;;;;;;;;AAEtC,sDAoB6B;AAE7B,yDAAgE;AAEhE,qDAWyB;AAEzB,MAAa,iBAAiB;CAO7B;AANC;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,uBAAK,GAAE;;iDACQ;AAChB;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;;oDACQ;AANrB,8CAOC;AAED,MAAa,cAAc;CAI1B;AAHC;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,2BAAS,GAAE;;uDACc;AAH5B,wCAIC;AAED,MAAa,mBAAoB,SAAQ,cAAc;CAUtD;AATC;IAAC,IAAA,0BAAQ,GAAE;;iDACE;AACb;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;;mDACsB;AACjC;IAAC,IAAA,4BAAU,EAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,sCAAsC,CAAC;IACpE,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;;yDACW;AATxB,kDAUC;AAED,MAAa,iBAAiB;CAS7B;AARC;IAAC,IAAA,0BAAQ,GAAE;;+CACE;AACb;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC;;wDACS;AACzC;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;;qDACkC;AAR/C,8CASC;AAED,MAAa,kBAAkB;CAQ9B;AAPC;IAAC,IAAA,wBAAM,EAAC,qCAAsB,EAAE,EAAC,MAAM,EAAE,CAAC,qCAAsB,CAAC,KAAK,CAAC,EAAC,CAAC;;gDACtC;AACnC;IAAC,IAAA,0BAAQ,GAAE;;mDACK;AAChB;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC;;kDACE;AAPlC,gDAQC;AAED,MAAa,wBAAwB;CAKpC;AAJC;IAAC,IAAA,wBAAM,EAAC,qCAAsB,EAAE,EAAC,MAAM,EAAE,CAAC,qCAAsB,CAAC,WAAW,CAAC,EAAC,CAAC;;sDACtC;AACzC;IAAC,IAAA,0BAAQ,GAAE;;yDACK;AAJlB,4DAKC;AAED,MAAa,oBAAoB;CAShC;AARC;IAAC,IAAA,wBAAM,EAAC,qCAAsB,EAAE,EAAC,MAAM,EAAE,CAAC,qCAAsB,CAAC,OAAO,CAAC,EAAC,CAAC;;kDACtC;AACrC;IAAC,IAAA,0BAAQ,GAAE;;qDACK;AAChB;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,gCAAc,GAAE;IAChB,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC;8BACvB,mBAAmB;oDAAC;AAR/B,oDASC;AAED,MAAa,kBAAkB;CAS9B;AARC;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,gCAAc,GAAE;IAChB,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC;;kDACE;AAChC;IAAC,IAAA,wBAAM,EAAC,qCAAsB,EAAE,EAAC,MAAM,EAAE,CAAC,qCAAsB,CAAC,KAAK,CAAC,EAAC,CAAC;;gDACtC;AACnC;IAAC,IAAA,0BAAQ,GAAE;;mDACK;AARlB,gDASC;AAED,MAAa,mBAAmB;CAQ/B;AAPC;IAAC,IAAA,0BAAQ,GAAE;;iDACE;AACb;IAAC,IAAA,0BAAQ,GAAE;;oDACK;AAChB;IAAC,IAAA,0BAAQ,GAAE;IACV,IAAA,4BAAU,GAAE;;mDACoB;AAPnC,kDAQC;AAED,MAAa,aAAa;CAuBzB;AAtBC;IAAC,IAAA,6BAAS,EAAC,CAAC,MAAM,EAAE,EAAE;QACpB,MAAM,QAAQ,GAAyB,MAAM,CAAC,KAAK,CAAC;QACpD,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;YAC9B,QAAQ,OAAO,CAAC,IAAI,EAAE;gBACpB,KAAK,qCAAsB,CAAC,KAAK;oBAC/B,OAAO,IAAA,gCAAY,EAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;gBACnD,KAAK,qCAAsB,CAAC,OAAO;oBACjC,OAAO,IAAA,gCAAY,EAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;gBACrD,KAAK,qCAAsB,CAAC,WAAW;oBACrC,OAAO,IAAA,gCAAY,EAAC,wBAAwB,EAAE,OAAO,CAAC,CAAC;gBACzD,KAAK,qCAAsB,CAAC,KAAK;oBAC/B,OAAO,IAAA,gCAAY,EAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;gBACnD;oBACE,MAAM,IAAI,KAAK,CAAC,WAAY,OAAe,CAAC,IAAI,gBAAgB,CAAC,CAAC;aACrE;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IACD,IAAA,yBAAO,GAAE;IACT,IAAA,gCAAc,GAAE;;+CACc;AAC/B;IAAC,IAAA,0BAAQ,GAAE;;2CACE;AAtBf,sCAuBC;AAED,MAAa,mBAAmB;CAO/B;AANC;IAAC,IAAA,yBAAO,GAAE;IACT,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC;IAC/B,IAAA,gCAAc,GAAE;;qDACe;AAChC;IAAC,IAAA,0BAAQ,GAAE;;iDACE;AANf,kDAOC;AAED,MAAa,2BAA2B;CAavC;AAVC;IAAC,IAAA,wBAAM,EAAC,wCAAyB,EAAE,EAAC,MAAM,EAAE,CAAC,wCAAyB,CAAC,OAAO,CAAC,EAAC,CAAC;;yDACzC;AACxC;IAAC,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,aAAa,CAAC;IACzB,IAAA,gCAAc,GAAE;;4DACN;AACX;IAAC,IAAA,uBAAK,GAAE;;+DACW;AACnB;IAAC,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,sBAAsB,CAAC;IAClC,IAAA,gCAAc,EAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC;8BACjB,GAAG;+DAAuB;AAZxC,kEAaC;AAED,MAAa,uBAAuB;CAGnC;AAFC;IAAC,IAAA,0BAAQ,GAAE;;qDACE;AAFf,0DAGC;AAED,MAAa,sBAAsB;CAMlC;AALC;IAAC,IAAA,0BAAQ,GAAE;;oDACE;AACb;IAAC,IAAA,yBAAO,GAAE;IACT,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,MAAM,CAAC;;wDACA;AALrB,wDAMC;AAED,MAAa,0BAA0B;CAuBtC;AAjBC;IAAC,IAAA,0BAAQ,GAAE;;wDACH;AACR;IAAC,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC;IAC/B,IAAA,gCAAc,GAAE;;2DACN;AACX;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,uBAAK,GAAE;;8DACY;AACpB;IAAC,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,uBAAuB,CAAC;IACnC,IAAA,gCAAc,EAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC;8BACrB,GAAG;0DAAgC;AAC3C;IAAC,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,uBAAuB,CAAC;IACnC,IAAA,0BAAQ,GAAE;;6DACe;AAC1B;IAAC,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,sBAAsB,CAAC;IAClC,IAAA,gCAAc,EAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC;8BACjB,GAAG;8DAAuB;AAtBxC,gEAuBC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  SubqlCosmosEventFilter,\n  SubqlCosmosHandlerKind,\n  SubqlCosmosCustomHandler,\n  SubqlCosmosMapping,\n  SubqlCosmosHandler,\n  SubqlCosmosRuntimeHandler,\n  SubqlCosmosRuntimeDatasource,\n  SubqlCosmosDatasourceKind,\n  SubqlCosmosCustomDatasource,\n  FileReference,\n  CustomDataSourceAsset,\n  SubqlCosmosBlockFilter,\n  SubqlCosmosBlockHandler,\n  SubqlCosmosEventHandler,\n  SubqlCosmosMessageFilter,\n  SubqlCosmosTransactionHandler,\n  SubqlCosmosMessageHandler,\n  CustomModule,\n  SubqlCosmosTxFilter,\n} from '@subql/types-cosmos';\n\nimport {plainToClass, Transform, Type} from 'class-transformer';\n\nimport {\n  IsArray,\n  IsEnum,\n  IsInt,\n  IsOptional,\n  IsString,\n  IsObject,\n  ValidateNested,\n  ValidateIf,\n  IsNumber,\n  IsBoolean,\n} from 'class-validator';\n\nexport class CosmosBlockFilter implements SubqlCosmosBlockFilter {\n  @IsOptional()\n  @IsInt()\n  modulo?: number;\n  @IsOptional()\n  @IsString()\n  timestamp?: string;\n}\n\nexport class CosmosTxFilter implements SubqlCosmosTxFilter {\n  @IsOptional()\n  @IsBoolean()\n  includeFailedTx?: boolean;\n}\n\nexport class CosmosMessageFilter extends CosmosTxFilter implements SubqlCosmosMessageFilter {\n  @IsString()\n  type: string;\n  @IsOptional()\n  @IsObject()\n  values?: {[key: string]: string};\n  @ValidateIf((o) => o.type === '/cosmwasm.wasm.v1.MsgExecuteContract')\n  @IsOptional()\n  @IsString()\n  contractCall?: string;\n}\n\nexport class CosmosEventFilter implements SubqlCosmosEventFilter {\n  @IsString()\n  type: string;\n  @IsOptional()\n  @Type(() => CosmosMessageFilter)\n  messageFilter?: SubqlCosmosMessageFilter;\n  @IsOptional()\n  @IsObject()\n  attributes?: Record<string, string | number>;\n}\n\nexport class CosmosBlockHandler implements SubqlCosmosBlockHandler {\n  @IsEnum(SubqlCosmosHandlerKind, {groups: [SubqlCosmosHandlerKind.Block]})\n  kind: SubqlCosmosHandlerKind.Block;\n  @IsString()\n  handler: string;\n  @IsOptional()\n  @Type(() => CosmosBlockFilter)\n  filter?: SubqlCosmosBlockFilter;\n}\n\nexport class CosmosTransactionHandler implements SubqlCosmosTransactionHandler {\n  @IsEnum(SubqlCosmosHandlerKind, {groups: [SubqlCosmosHandlerKind.Transaction]})\n  kind: SubqlCosmosHandlerKind.Transaction;\n  @IsString()\n  handler: string;\n}\n\nexport class CosmosMessageHandler implements SubqlCosmosMessageHandler {\n  @IsEnum(SubqlCosmosHandlerKind, {groups: [SubqlCosmosHandlerKind.Message]})\n  kind: SubqlCosmosHandlerKind.Message;\n  @IsString()\n  handler: string;\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CosmosMessageFilter)\n  filter?: CosmosMessageFilter;\n}\n\nexport class CosmosEventHandler implements SubqlCosmosEventHandler {\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CosmosEventFilter)\n  filter?: SubqlCosmosEventFilter;\n  @IsEnum(SubqlCosmosHandlerKind, {groups: [SubqlCosmosHandlerKind.Event]})\n  kind: SubqlCosmosHandlerKind.Event;\n  @IsString()\n  handler: string;\n}\n\nexport class CosmosCustomHandler implements SubqlCosmosCustomHandler {\n  @IsString()\n  kind: string;\n  @IsString()\n  handler: string;\n  @IsObject()\n  @IsOptional()\n  filter?: Record<string, unknown>;\n}\n\nexport class CosmosMapping implements SubqlCosmosMapping {\n  @Transform((params) => {\n    const handlers: SubqlCosmosHandler[] = params.value;\n    return handlers.map((handler) => {\n      switch (handler.kind) {\n        case SubqlCosmosHandlerKind.Event:\n          return plainToClass(CosmosEventHandler, handler);\n        case SubqlCosmosHandlerKind.Message:\n          return plainToClass(CosmosMessageHandler, handler);\n        case SubqlCosmosHandlerKind.Transaction:\n          return plainToClass(CosmosTransactionHandler, handler);\n        case SubqlCosmosHandlerKind.Block:\n          return plainToClass(CosmosBlockHandler, handler);\n        default:\n          throw new Error(`handler ${(handler as any).kind} not supported`);\n      }\n    });\n  })\n  @IsArray()\n  @ValidateNested()\n  handlers: SubqlCosmosHandler[];\n  @IsString()\n  file: string;\n}\n\nexport class CosmosCustomMapping implements SubqlCosmosMapping<SubqlCosmosCustomHandler> {\n  @IsArray()\n  @Type(() => CosmosCustomHandler)\n  @ValidateNested()\n  handlers: CosmosCustomHandler[];\n  @IsString()\n  file: string;\n}\n\nexport class CosmosRuntimeDataSourceBase<M extends SubqlCosmosMapping<SubqlCosmosRuntimeHandler>>\n  implements SubqlCosmosRuntimeDatasource<M>\n{\n  @IsEnum(SubqlCosmosDatasourceKind, {groups: [SubqlCosmosDatasourceKind.Runtime]})\n  kind: SubqlCosmosDatasourceKind.Runtime;\n  @Type(() => CosmosMapping)\n  @ValidateNested()\n  mapping: M;\n  @IsInt()\n  startBlock: number;\n  @Type(() => CosmosCustomModuleImpl)\n  @ValidateNested({each: true})\n  chainTypes: Map<string, CustomModule>;\n}\n\nexport class CosmosFileReferenceImpl implements FileReference {\n  @IsString()\n  file: string;\n}\n\nexport class CosmosCustomModuleImpl implements CustomModule {\n  @IsString()\n  file: string;\n  @IsArray()\n  @Type(() => String)\n  messages: string[];\n}\n\nexport class CosmosCustomDataSourceBase<\n  K extends string,\n  M extends SubqlCosmosMapping = SubqlCosmosMapping<SubqlCosmosCustomHandler>,\n  O = any\n> implements SubqlCosmosCustomDatasource<K, M, O>\n{\n  @IsString()\n  kind: K;\n  @Type(() => CosmosCustomMapping)\n  @ValidateNested()\n  mapping: M;\n  @IsOptional()\n  @IsInt()\n  startBlock?: number;\n  @Type(() => CosmosFileReferenceImpl)\n  @ValidateNested({each: true})\n  assets: Map<string, CustomDataSourceAsset>;\n  @Type(() => CosmosFileReferenceImpl)\n  @IsObject()\n  processor?: FileReference;\n  @Type(() => CosmosCustomModuleImpl)\n  @ValidateNested({each: true})\n  chainTypes: Map<string, CustomModule>;\n}\n"]}