{"version":3,"file":"metadata.js","sourceRoot":"","sources":["../../src/query/metadata.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;AAEtC,uDAAkD;AAErC,QAAA,cAAc,GAAG,aAAa,CAAC;AAE/B,QAAA,oBAAoB,GAAG,2BAA2B,CAAC;AAEhE,SAAgB,oBAAoB,CAAC,OAAe;IAClD,MAAM,IAAI,GAAG,IAAA,yBAAW,EAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IACtC,OAAO,aAAa,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,0DAA0D;AACzG,CAAC;AAHD,oDAGC;AAED,8FAA8F;AAC9F,SAAgB,QAAQ,CAAC,MAAc,EAAE,IAAY,EAAE,SAAiB;IACtE,gDAAgD;IAChD,OAAO,IAAA,yBAAW,EAAC,GAAG,MAAM,IAAI,SAAS,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC5E,CAAC;AAHD,4BAGC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {blake2AsHex} from '@polkadot/util-crypto';\n\nexport const METADATA_REGEX = /^_metadata$/;\n\nexport const MULTI_METADATA_REGEX = /^_metadata_[a-zA-Z0-9-]+$/;\n\nexport function getMetadataTableName(chainId: string): string {\n  const hash = blake2AsHex(chainId, 64);\n  return `_metadata_${hash}`.substring(0, 63); // 63 chars is the max postgres database table name length\n}\n\n// Hash names of SQL functions, triggers, channels to ensure it does not exceed the char limit\nexport function hashName(schema: string, type: string, tableName: string): string {\n  // Postgres identifier limit is 63 bytes (chars)\n  return blake2AsHex(`${schema}_${tableName}_${type}`, 64).substring(0, 63);\n}\n"]}