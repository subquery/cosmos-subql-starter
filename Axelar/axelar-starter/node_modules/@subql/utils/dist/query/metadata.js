"use strict";
// Copyright 2020-2022 OnFinality Limited authors & contributors
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.hashName = exports.getMetadataTableName = exports.MULTI_METADATA_REGEX = exports.METADATA_REGEX = void 0;
const util_crypto_1 = require("@polkadot/util-crypto");
exports.METADATA_REGEX = /^_metadata$/;
exports.MULTI_METADATA_REGEX = /^_metadata_[a-zA-Z0-9-]+$/;
function getMetadataTableName(chainId) {
    const hash = (0, util_crypto_1.blake2AsHex)(chainId, 64);
    return `_metadata_${hash}`.substring(0, 63); // 63 chars is the max postgres database table name length
}
exports.getMetadataTableName = getMetadataTableName;
// Hash names of SQL functions, triggers, channels to ensure it does not exceed the char limit
function hashName(schema, type, tableName) {
    // Postgres identifier limit is 63 bytes (chars)
    return (0, util_crypto_1.blake2AsHex)(`${schema}_${tableName}_${type}`, 64).substring(0, 63);
}
exports.hashName = hashName;
//# sourceMappingURL=metadata.js.map