import { ProjectManifestBaseImpl } from '@subql/common';
import { SubqlCustomDatasource, SubqlCustomHandler, SubqlMapping, SubqlRuntimeHandler } from '@subql/types-ethereum';
import { CustomDataSourceBase, RuntimeDataSourceBase, EthereumMapping } from '../../models';
import { CustomDatasourceV0_3_0, EthereumProjectManifestV0_3_0, RuntimeDataSourceV0_3_0, SubqlMappingV0_3_0 } from './types';
export declare class FileType {
    file: string;
}
export declare class ProjectNetworkDeploymentV0_3_0 {
    genesisHash: string;
}
export declare class ProjectNetworkV0_3_0 extends ProjectNetworkDeploymentV0_3_0 {
    endpoint?: string;
    dictionary?: string;
}
export declare class FileTypeV0_3_0 {
    file: string;
}
export declare class EthereumProjectMappingV0_3_0 extends EthereumMapping {
    file: string;
}
export declare class EthereumRuntimeDataSourceV0_3_0Impl extends RuntimeDataSourceBase<SubqlMappingV0_3_0<SubqlRuntimeHandler>> implements RuntimeDataSourceV0_3_0 {
    mapping: SubqlMappingV0_3_0<SubqlRuntimeHandler>;
}
export declare class EthereumCustomDataSourceV0_3_0Impl<K extends string = string, M extends SubqlMapping = SubqlMapping<SubqlCustomHandler>> extends CustomDataSourceBase<K, M> implements SubqlCustomDatasource<K, M> {
}
export declare class DeploymentV0_3_0 {
    specVersion: string;
    schema: FileType;
    dataSources: (RuntimeDataSourceV0_3_0 | CustomDatasourceV0_3_0)[];
    network: ProjectNetworkDeploymentV0_3_0;
}
export declare class ProjectManifestV0_3_0Impl extends ProjectManifestBaseImpl<DeploymentV0_3_0> implements EthereumProjectManifestV0_3_0 {
    specVersion: string;
    name: string;
    version: string;
    network: ProjectNetworkV0_3_0;
    schema: FileType;
    dataSources: (RuntimeDataSourceV0_3_0 | CustomDatasourceV0_3_0)[];
    protected _deployment: DeploymentV0_3_0;
    get deployment(): DeploymentV0_3_0;
}
